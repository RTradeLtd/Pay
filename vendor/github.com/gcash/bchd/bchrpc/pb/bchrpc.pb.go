// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bchrpc.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetBlockchainInfoResponse_BitcoinNet int32

const (
	GetBlockchainInfoResponse_MAINNET  GetBlockchainInfoResponse_BitcoinNet = 0
	GetBlockchainInfoResponse_REGTEST  GetBlockchainInfoResponse_BitcoinNet = 1
	GetBlockchainInfoResponse_TESTNET3 GetBlockchainInfoResponse_BitcoinNet = 2
	GetBlockchainInfoResponse_SIMNET   GetBlockchainInfoResponse_BitcoinNet = 3
)

var GetBlockchainInfoResponse_BitcoinNet_name = map[int32]string{
	0: "MAINNET",
	1: "REGTEST",
	2: "TESTNET3",
	3: "SIMNET",
}

var GetBlockchainInfoResponse_BitcoinNet_value = map[string]int32{
	"MAINNET":  0,
	"REGTEST":  1,
	"TESTNET3": 2,
	"SIMNET":   3,
}

func (x GetBlockchainInfoResponse_BitcoinNet) String() string {
	return proto.EnumName(GetBlockchainInfoResponse_BitcoinNet_name, int32(x))
}

func (GetBlockchainInfoResponse_BitcoinNet) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{3, 0}
}

type BlockNotification_Type int32

const (
	BlockNotification_CONNECTED    BlockNotification_Type = 0
	BlockNotification_DISCONNECTED BlockNotification_Type = 1
)

var BlockNotification_Type_name = map[int32]string{
	0: "CONNECTED",
	1: "DISCONNECTED",
}

var BlockNotification_Type_value = map[string]int32{
	"CONNECTED":    0,
	"DISCONNECTED": 1,
}

func (x BlockNotification_Type) String() string {
	return proto.EnumName(BlockNotification_Type_name, int32(x))
}

func (BlockNotification_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{30, 0}
}

type TransactionNotification_Type int32

const (
	TransactionNotification_UNCONFIRMED TransactionNotification_Type = 0
	TransactionNotification_CONFIRMED   TransactionNotification_Type = 1
)

var TransactionNotification_Type_name = map[int32]string{
	0: "UNCONFIRMED",
	1: "CONFIRMED",
}

var TransactionNotification_Type_value = map[string]int32{
	"UNCONFIRMED": 0,
	"CONFIRMED":   1,
}

func (x TransactionNotification_Type) String() string {
	return proto.EnumName(TransactionNotification_Type_name, int32(x))
}

func (TransactionNotification_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{31, 0}
}

type GetMempoolInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMempoolInfoRequest) Reset()         { *m = GetMempoolInfoRequest{} }
func (m *GetMempoolInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetMempoolInfoRequest) ProtoMessage()    {}
func (*GetMempoolInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{0}
}

func (m *GetMempoolInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMempoolInfoRequest.Unmarshal(m, b)
}
func (m *GetMempoolInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMempoolInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetMempoolInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMempoolInfoRequest.Merge(m, src)
}
func (m *GetMempoolInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetMempoolInfoRequest.Size(m)
}
func (m *GetMempoolInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMempoolInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMempoolInfoRequest proto.InternalMessageInfo

type GetMempoolInfoResponse struct {
	Size                 uint32   `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Bytes                uint32   `protobuf:"varint,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMempoolInfoResponse) Reset()         { *m = GetMempoolInfoResponse{} }
func (m *GetMempoolInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetMempoolInfoResponse) ProtoMessage()    {}
func (*GetMempoolInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{1}
}

func (m *GetMempoolInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMempoolInfoResponse.Unmarshal(m, b)
}
func (m *GetMempoolInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMempoolInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetMempoolInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMempoolInfoResponse.Merge(m, src)
}
func (m *GetMempoolInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetMempoolInfoResponse.Size(m)
}
func (m *GetMempoolInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMempoolInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMempoolInfoResponse proto.InternalMessageInfo

func (m *GetMempoolInfoResponse) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetMempoolInfoResponse) GetBytes() uint32 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

type GetBlockchainInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockchainInfoRequest) Reset()         { *m = GetBlockchainInfoRequest{} }
func (m *GetBlockchainInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockchainInfoRequest) ProtoMessage()    {}
func (*GetBlockchainInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{2}
}

func (m *GetBlockchainInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockchainInfoRequest.Unmarshal(m, b)
}
func (m *GetBlockchainInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockchainInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockchainInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockchainInfoRequest.Merge(m, src)
}
func (m *GetBlockchainInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockchainInfoRequest.Size(m)
}
func (m *GetBlockchainInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockchainInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockchainInfoRequest proto.InternalMessageInfo

type GetBlockchainInfoResponse struct {
	BitcoinNet           GetBlockchainInfoResponse_BitcoinNet `protobuf:"varint,1,opt,name=bitcoin_net,json=bitcoinNet,proto3,enum=pb.GetBlockchainInfoResponse_BitcoinNet" json:"bitcoin_net,omitempty"`
	BestHeight           int32                                `protobuf:"varint,2,opt,name=best_height,json=bestHeight,proto3" json:"best_height,omitempty"`
	BestBlockHash        []byte                               `protobuf:"bytes,3,opt,name=best_block_hash,json=bestBlockHash,proto3" json:"best_block_hash,omitempty"`
	Difficulty           float64                              `protobuf:"fixed64,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	MedianTime           int64                                `protobuf:"varint,5,opt,name=median_time,json=medianTime,proto3" json:"median_time,omitempty"`
	TxIndex              bool                                 `protobuf:"varint,6,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	AddrIndex            bool                                 `protobuf:"varint,7,opt,name=addr_index,json=addrIndex,proto3" json:"addr_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *GetBlockchainInfoResponse) Reset()         { *m = GetBlockchainInfoResponse{} }
func (m *GetBlockchainInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockchainInfoResponse) ProtoMessage()    {}
func (*GetBlockchainInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{3}
}

func (m *GetBlockchainInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockchainInfoResponse.Unmarshal(m, b)
}
func (m *GetBlockchainInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockchainInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockchainInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockchainInfoResponse.Merge(m, src)
}
func (m *GetBlockchainInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockchainInfoResponse.Size(m)
}
func (m *GetBlockchainInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockchainInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockchainInfoResponse proto.InternalMessageInfo

func (m *GetBlockchainInfoResponse) GetBitcoinNet() GetBlockchainInfoResponse_BitcoinNet {
	if m != nil {
		return m.BitcoinNet
	}
	return GetBlockchainInfoResponse_MAINNET
}

func (m *GetBlockchainInfoResponse) GetBestHeight() int32 {
	if m != nil {
		return m.BestHeight
	}
	return 0
}

func (m *GetBlockchainInfoResponse) GetBestBlockHash() []byte {
	if m != nil {
		return m.BestBlockHash
	}
	return nil
}

func (m *GetBlockchainInfoResponse) GetDifficulty() float64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *GetBlockchainInfoResponse) GetMedianTime() int64 {
	if m != nil {
		return m.MedianTime
	}
	return 0
}

func (m *GetBlockchainInfoResponse) GetTxIndex() bool {
	if m != nil {
		return m.TxIndex
	}
	return false
}

func (m *GetBlockchainInfoResponse) GetAddrIndex() bool {
	if m != nil {
		return m.AddrIndex
	}
	return false
}

type GetBlockInfoRequest struct {
	// Types that are valid to be assigned to HashOrHeight:
	//	*GetBlockInfoRequest_Hash
	//	*GetBlockInfoRequest_Height
	HashOrHeight         isGetBlockInfoRequest_HashOrHeight `protobuf_oneof:"hash_or_height"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *GetBlockInfoRequest) Reset()         { *m = GetBlockInfoRequest{} }
func (m *GetBlockInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockInfoRequest) ProtoMessage()    {}
func (*GetBlockInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{4}
}

func (m *GetBlockInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockInfoRequest.Unmarshal(m, b)
}
func (m *GetBlockInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockInfoRequest.Merge(m, src)
}
func (m *GetBlockInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockInfoRequest.Size(m)
}
func (m *GetBlockInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockInfoRequest proto.InternalMessageInfo

type isGetBlockInfoRequest_HashOrHeight interface {
	isGetBlockInfoRequest_HashOrHeight()
}

type GetBlockInfoRequest_Hash struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3,oneof"`
}

type GetBlockInfoRequest_Height struct {
	Height int32 `protobuf:"varint,2,opt,name=height,proto3,oneof"`
}

func (*GetBlockInfoRequest_Hash) isGetBlockInfoRequest_HashOrHeight() {}

func (*GetBlockInfoRequest_Height) isGetBlockInfoRequest_HashOrHeight() {}

func (m *GetBlockInfoRequest) GetHashOrHeight() isGetBlockInfoRequest_HashOrHeight {
	if m != nil {
		return m.HashOrHeight
	}
	return nil
}

func (m *GetBlockInfoRequest) GetHash() []byte {
	if x, ok := m.GetHashOrHeight().(*GetBlockInfoRequest_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *GetBlockInfoRequest) GetHeight() int32 {
	if x, ok := m.GetHashOrHeight().(*GetBlockInfoRequest_Height); ok {
		return x.Height
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetBlockInfoRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetBlockInfoRequest_OneofMarshaler, _GetBlockInfoRequest_OneofUnmarshaler, _GetBlockInfoRequest_OneofSizer, []interface{}{
		(*GetBlockInfoRequest_Hash)(nil),
		(*GetBlockInfoRequest_Height)(nil),
	}
}

func _GetBlockInfoRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetBlockInfoRequest)
	// hash_or_height
	switch x := m.HashOrHeight.(type) {
	case *GetBlockInfoRequest_Hash:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Hash)
	case *GetBlockInfoRequest_Height:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case nil:
	default:
		return fmt.Errorf("GetBlockInfoRequest.HashOrHeight has unexpected type %T", x)
	}
	return nil
}

func _GetBlockInfoRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetBlockInfoRequest)
	switch tag {
	case 1: // hash_or_height.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.HashOrHeight = &GetBlockInfoRequest_Hash{x}
		return true, err
	case 2: // hash_or_height.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HashOrHeight = &GetBlockInfoRequest_Height{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _GetBlockInfoRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetBlockInfoRequest)
	// hash_or_height
	switch x := m.HashOrHeight.(type) {
	case *GetBlockInfoRequest_Hash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Hash)))
		n += len(x.Hash)
	case *GetBlockInfoRequest_Height:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Height))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetBlockInfoResponse struct {
	Info                 *BlockInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetBlockInfoResponse) Reset()         { *m = GetBlockInfoResponse{} }
func (m *GetBlockInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockInfoResponse) ProtoMessage()    {}
func (*GetBlockInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{5}
}

func (m *GetBlockInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockInfoResponse.Unmarshal(m, b)
}
func (m *GetBlockInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockInfoResponse.Merge(m, src)
}
func (m *GetBlockInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockInfoResponse.Size(m)
}
func (m *GetBlockInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockInfoResponse proto.InternalMessageInfo

func (m *GetBlockInfoResponse) GetInfo() *BlockInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetBlockRequest struct {
	// Types that are valid to be assigned to HashOrHeight:
	//	*GetBlockRequest_Hash
	//	*GetBlockRequest_Height
	HashOrHeight isGetBlockRequest_HashOrHeight `protobuf_oneof:"hash_or_height"`
	// Provide full transaction info instead of only the hashes.
	FullTransactions     bool     `protobuf:"varint,3,opt,name=full_transactions,json=fullTransactions,proto3" json:"full_transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockRequest) Reset()         { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()    {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{6}
}

func (m *GetBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockRequest.Unmarshal(m, b)
}
func (m *GetBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockRequest.Merge(m, src)
}
func (m *GetBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockRequest.Size(m)
}
func (m *GetBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockRequest proto.InternalMessageInfo

type isGetBlockRequest_HashOrHeight interface {
	isGetBlockRequest_HashOrHeight()
}

type GetBlockRequest_Hash struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3,oneof"`
}

type GetBlockRequest_Height struct {
	Height int32 `protobuf:"varint,2,opt,name=height,proto3,oneof"`
}

func (*GetBlockRequest_Hash) isGetBlockRequest_HashOrHeight() {}

func (*GetBlockRequest_Height) isGetBlockRequest_HashOrHeight() {}

func (m *GetBlockRequest) GetHashOrHeight() isGetBlockRequest_HashOrHeight {
	if m != nil {
		return m.HashOrHeight
	}
	return nil
}

func (m *GetBlockRequest) GetHash() []byte {
	if x, ok := m.GetHashOrHeight().(*GetBlockRequest_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *GetBlockRequest) GetHeight() int32 {
	if x, ok := m.GetHashOrHeight().(*GetBlockRequest_Height); ok {
		return x.Height
	}
	return 0
}

func (m *GetBlockRequest) GetFullTransactions() bool {
	if m != nil {
		return m.FullTransactions
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetBlockRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetBlockRequest_OneofMarshaler, _GetBlockRequest_OneofUnmarshaler, _GetBlockRequest_OneofSizer, []interface{}{
		(*GetBlockRequest_Hash)(nil),
		(*GetBlockRequest_Height)(nil),
	}
}

func _GetBlockRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetBlockRequest)
	// hash_or_height
	switch x := m.HashOrHeight.(type) {
	case *GetBlockRequest_Hash:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Hash)
	case *GetBlockRequest_Height:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case nil:
	default:
		return fmt.Errorf("GetBlockRequest.HashOrHeight has unexpected type %T", x)
	}
	return nil
}

func _GetBlockRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetBlockRequest)
	switch tag {
	case 1: // hash_or_height.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.HashOrHeight = &GetBlockRequest_Hash{x}
		return true, err
	case 2: // hash_or_height.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HashOrHeight = &GetBlockRequest_Height{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _GetBlockRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetBlockRequest)
	// hash_or_height
	switch x := m.HashOrHeight.(type) {
	case *GetBlockRequest_Hash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Hash)))
		n += len(x.Hash)
	case *GetBlockRequest_Height:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Height))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetBlockResponse struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockResponse) Reset()         { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()    {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{7}
}

func (m *GetBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockResponse.Unmarshal(m, b)
}
func (m *GetBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockResponse.Merge(m, src)
}
func (m *GetBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockResponse.Size(m)
}
func (m *GetBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockResponse proto.InternalMessageInfo

func (m *GetBlockResponse) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetRawBlockRequest struct {
	// Types that are valid to be assigned to HashOrHeight:
	//	*GetRawBlockRequest_Hash
	//	*GetRawBlockRequest_Height
	HashOrHeight         isGetRawBlockRequest_HashOrHeight `protobuf_oneof:"hash_or_height"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *GetRawBlockRequest) Reset()         { *m = GetRawBlockRequest{} }
func (m *GetRawBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetRawBlockRequest) ProtoMessage()    {}
func (*GetRawBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{8}
}

func (m *GetRawBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawBlockRequest.Unmarshal(m, b)
}
func (m *GetRawBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawBlockRequest.Marshal(b, m, deterministic)
}
func (m *GetRawBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawBlockRequest.Merge(m, src)
}
func (m *GetRawBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetRawBlockRequest.Size(m)
}
func (m *GetRawBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawBlockRequest proto.InternalMessageInfo

type isGetRawBlockRequest_HashOrHeight interface {
	isGetRawBlockRequest_HashOrHeight()
}

type GetRawBlockRequest_Hash struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3,oneof"`
}

type GetRawBlockRequest_Height struct {
	Height int32 `protobuf:"varint,2,opt,name=height,proto3,oneof"`
}

func (*GetRawBlockRequest_Hash) isGetRawBlockRequest_HashOrHeight() {}

func (*GetRawBlockRequest_Height) isGetRawBlockRequest_HashOrHeight() {}

func (m *GetRawBlockRequest) GetHashOrHeight() isGetRawBlockRequest_HashOrHeight {
	if m != nil {
		return m.HashOrHeight
	}
	return nil
}

func (m *GetRawBlockRequest) GetHash() []byte {
	if x, ok := m.GetHashOrHeight().(*GetRawBlockRequest_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *GetRawBlockRequest) GetHeight() int32 {
	if x, ok := m.GetHashOrHeight().(*GetRawBlockRequest_Height); ok {
		return x.Height
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetRawBlockRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetRawBlockRequest_OneofMarshaler, _GetRawBlockRequest_OneofUnmarshaler, _GetRawBlockRequest_OneofSizer, []interface{}{
		(*GetRawBlockRequest_Hash)(nil),
		(*GetRawBlockRequest_Height)(nil),
	}
}

func _GetRawBlockRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetRawBlockRequest)
	// hash_or_height
	switch x := m.HashOrHeight.(type) {
	case *GetRawBlockRequest_Hash:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Hash)
	case *GetRawBlockRequest_Height:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case nil:
	default:
		return fmt.Errorf("GetRawBlockRequest.HashOrHeight has unexpected type %T", x)
	}
	return nil
}

func _GetRawBlockRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetRawBlockRequest)
	switch tag {
	case 1: // hash_or_height.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.HashOrHeight = &GetRawBlockRequest_Hash{x}
		return true, err
	case 2: // hash_or_height.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HashOrHeight = &GetRawBlockRequest_Height{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _GetRawBlockRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetRawBlockRequest)
	// hash_or_height
	switch x := m.HashOrHeight.(type) {
	case *GetRawBlockRequest_Hash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Hash)))
		n += len(x.Hash)
	case *GetRawBlockRequest_Height:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Height))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetRawBlockResponse struct {
	Block                []byte   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawBlockResponse) Reset()         { *m = GetRawBlockResponse{} }
func (m *GetRawBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawBlockResponse) ProtoMessage()    {}
func (*GetRawBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{9}
}

func (m *GetRawBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawBlockResponse.Unmarshal(m, b)
}
func (m *GetRawBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawBlockResponse.Marshal(b, m, deterministic)
}
func (m *GetRawBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawBlockResponse.Merge(m, src)
}
func (m *GetRawBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawBlockResponse.Size(m)
}
func (m *GetRawBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawBlockResponse proto.InternalMessageInfo

func (m *GetRawBlockResponse) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetBlockFilterRequest struct {
	// Types that are valid to be assigned to HashOrHeight:
	//	*GetBlockFilterRequest_Hash
	//	*GetBlockFilterRequest_Height
	HashOrHeight         isGetBlockFilterRequest_HashOrHeight `protobuf_oneof:"hash_or_height"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *GetBlockFilterRequest) Reset()         { *m = GetBlockFilterRequest{} }
func (m *GetBlockFilterRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockFilterRequest) ProtoMessage()    {}
func (*GetBlockFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{10}
}

func (m *GetBlockFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockFilterRequest.Unmarshal(m, b)
}
func (m *GetBlockFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockFilterRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockFilterRequest.Merge(m, src)
}
func (m *GetBlockFilterRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockFilterRequest.Size(m)
}
func (m *GetBlockFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockFilterRequest proto.InternalMessageInfo

type isGetBlockFilterRequest_HashOrHeight interface {
	isGetBlockFilterRequest_HashOrHeight()
}

type GetBlockFilterRequest_Hash struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3,oneof"`
}

type GetBlockFilterRequest_Height struct {
	Height int32 `protobuf:"varint,2,opt,name=height,proto3,oneof"`
}

func (*GetBlockFilterRequest_Hash) isGetBlockFilterRequest_HashOrHeight() {}

func (*GetBlockFilterRequest_Height) isGetBlockFilterRequest_HashOrHeight() {}

func (m *GetBlockFilterRequest) GetHashOrHeight() isGetBlockFilterRequest_HashOrHeight {
	if m != nil {
		return m.HashOrHeight
	}
	return nil
}

func (m *GetBlockFilterRequest) GetHash() []byte {
	if x, ok := m.GetHashOrHeight().(*GetBlockFilterRequest_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *GetBlockFilterRequest) GetHeight() int32 {
	if x, ok := m.GetHashOrHeight().(*GetBlockFilterRequest_Height); ok {
		return x.Height
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetBlockFilterRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetBlockFilterRequest_OneofMarshaler, _GetBlockFilterRequest_OneofUnmarshaler, _GetBlockFilterRequest_OneofSizer, []interface{}{
		(*GetBlockFilterRequest_Hash)(nil),
		(*GetBlockFilterRequest_Height)(nil),
	}
}

func _GetBlockFilterRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetBlockFilterRequest)
	// hash_or_height
	switch x := m.HashOrHeight.(type) {
	case *GetBlockFilterRequest_Hash:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Hash)
	case *GetBlockFilterRequest_Height:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case nil:
	default:
		return fmt.Errorf("GetBlockFilterRequest.HashOrHeight has unexpected type %T", x)
	}
	return nil
}

func _GetBlockFilterRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetBlockFilterRequest)
	switch tag {
	case 1: // hash_or_height.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.HashOrHeight = &GetBlockFilterRequest_Hash{x}
		return true, err
	case 2: // hash_or_height.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HashOrHeight = &GetBlockFilterRequest_Height{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _GetBlockFilterRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetBlockFilterRequest)
	// hash_or_height
	switch x := m.HashOrHeight.(type) {
	case *GetBlockFilterRequest_Hash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Hash)))
		n += len(x.Hash)
	case *GetBlockFilterRequest_Height:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Height))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetBlockFilterResponse struct {
	Filter               []byte   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockFilterResponse) Reset()         { *m = GetBlockFilterResponse{} }
func (m *GetBlockFilterResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockFilterResponse) ProtoMessage()    {}
func (*GetBlockFilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{11}
}

func (m *GetBlockFilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockFilterResponse.Unmarshal(m, b)
}
func (m *GetBlockFilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockFilterResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockFilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockFilterResponse.Merge(m, src)
}
func (m *GetBlockFilterResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockFilterResponse.Size(m)
}
func (m *GetBlockFilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockFilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockFilterResponse proto.InternalMessageInfo

func (m *GetBlockFilterResponse) GetFilter() []byte {
	if m != nil {
		return m.Filter
	}
	return nil
}

type GetHeadersRequest struct {
	BlockLocatorHashes   [][]byte `protobuf:"bytes,1,rep,name=block_locator_hashes,json=blockLocatorHashes,proto3" json:"block_locator_hashes,omitempty"`
	StopHash             []byte   `protobuf:"bytes,2,opt,name=stop_hash,json=stopHash,proto3" json:"stop_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHeadersRequest) Reset()         { *m = GetHeadersRequest{} }
func (m *GetHeadersRequest) String() string { return proto.CompactTextString(m) }
func (*GetHeadersRequest) ProtoMessage()    {}
func (*GetHeadersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{12}
}

func (m *GetHeadersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHeadersRequest.Unmarshal(m, b)
}
func (m *GetHeadersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHeadersRequest.Marshal(b, m, deterministic)
}
func (m *GetHeadersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHeadersRequest.Merge(m, src)
}
func (m *GetHeadersRequest) XXX_Size() int {
	return xxx_messageInfo_GetHeadersRequest.Size(m)
}
func (m *GetHeadersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHeadersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHeadersRequest proto.InternalMessageInfo

func (m *GetHeadersRequest) GetBlockLocatorHashes() [][]byte {
	if m != nil {
		return m.BlockLocatorHashes
	}
	return nil
}

func (m *GetHeadersRequest) GetStopHash() []byte {
	if m != nil {
		return m.StopHash
	}
	return nil
}

type GetHeadersResponse struct {
	Headers              []*BlockInfo `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetHeadersResponse) Reset()         { *m = GetHeadersResponse{} }
func (m *GetHeadersResponse) String() string { return proto.CompactTextString(m) }
func (*GetHeadersResponse) ProtoMessage()    {}
func (*GetHeadersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{13}
}

func (m *GetHeadersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHeadersResponse.Unmarshal(m, b)
}
func (m *GetHeadersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHeadersResponse.Marshal(b, m, deterministic)
}
func (m *GetHeadersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHeadersResponse.Merge(m, src)
}
func (m *GetHeadersResponse) XXX_Size() int {
	return xxx_messageInfo_GetHeadersResponse.Size(m)
}
func (m *GetHeadersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHeadersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHeadersResponse proto.InternalMessageInfo

func (m *GetHeadersResponse) GetHeaders() []*BlockInfo {
	if m != nil {
		return m.Headers
	}
	return nil
}

type GetTransactionRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{14}
}

func (m *GetTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequest.Merge(m, src)
}
func (m *GetTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequest.Size(m)
}
func (m *GetTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequest proto.InternalMessageInfo

func (m *GetTransactionRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetTransactionResponse struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetTransactionResponse) Reset()         { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()    {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{15}
}

func (m *GetTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionResponse.Unmarshal(m, b)
}
func (m *GetTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionResponse.Marshal(b, m, deterministic)
}
func (m *GetTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionResponse.Merge(m, src)
}
func (m *GetTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionResponse.Size(m)
}
func (m *GetTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionResponse proto.InternalMessageInfo

func (m *GetTransactionResponse) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type GetRawTransactionRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawTransactionRequest) Reset()         { *m = GetRawTransactionRequest{} }
func (m *GetRawTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetRawTransactionRequest) ProtoMessage()    {}
func (*GetRawTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{16}
}

func (m *GetRawTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawTransactionRequest.Unmarshal(m, b)
}
func (m *GetRawTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawTransactionRequest.Marshal(b, m, deterministic)
}
func (m *GetRawTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawTransactionRequest.Merge(m, src)
}
func (m *GetRawTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetRawTransactionRequest.Size(m)
}
func (m *GetRawTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawTransactionRequest proto.InternalMessageInfo

func (m *GetRawTransactionRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetRawTransactionResponse struct {
	Transaction          []byte   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawTransactionResponse) Reset()         { *m = GetRawTransactionResponse{} }
func (m *GetRawTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawTransactionResponse) ProtoMessage()    {}
func (*GetRawTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{17}
}

func (m *GetRawTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawTransactionResponse.Unmarshal(m, b)
}
func (m *GetRawTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawTransactionResponse.Marshal(b, m, deterministic)
}
func (m *GetRawTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawTransactionResponse.Merge(m, src)
}
func (m *GetRawTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawTransactionResponse.Size(m)
}
func (m *GetRawTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawTransactionResponse proto.InternalMessageInfo

func (m *GetRawTransactionResponse) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type GetAddressTransactionsRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Control the number of transactions to be fetched from the blockchain.
	// These controls only apply to the confirmed transactions. All unconfirmed
	// ones will be returned always.
	NbSkip  uint32 `protobuf:"varint,2,opt,name=nb_skip,json=nbSkip,proto3" json:"nb_skip,omitempty"`
	NbFetch uint32 `protobuf:"varint,3,opt,name=nb_fetch,json=nbFetch,proto3" json:"nb_fetch,omitempty"`
	// If the start block is provided it will only return transactions after this
	// block. This should be used if possible to save bandwidth.
	//
	// Types that are valid to be assigned to StartBlock:
	//	*GetAddressTransactionsRequest_Hash
	//	*GetAddressTransactionsRequest_Height
	StartBlock           isGetAddressTransactionsRequest_StartBlock `protobuf_oneof:"start_block"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *GetAddressTransactionsRequest) Reset()         { *m = GetAddressTransactionsRequest{} }
func (m *GetAddressTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddressTransactionsRequest) ProtoMessage()    {}
func (*GetAddressTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{18}
}

func (m *GetAddressTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressTransactionsRequest.Unmarshal(m, b)
}
func (m *GetAddressTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *GetAddressTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressTransactionsRequest.Merge(m, src)
}
func (m *GetAddressTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddressTransactionsRequest.Size(m)
}
func (m *GetAddressTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressTransactionsRequest proto.InternalMessageInfo

func (m *GetAddressTransactionsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAddressTransactionsRequest) GetNbSkip() uint32 {
	if m != nil {
		return m.NbSkip
	}
	return 0
}

func (m *GetAddressTransactionsRequest) GetNbFetch() uint32 {
	if m != nil {
		return m.NbFetch
	}
	return 0
}

type isGetAddressTransactionsRequest_StartBlock interface {
	isGetAddressTransactionsRequest_StartBlock()
}

type GetAddressTransactionsRequest_Hash struct {
	Hash []byte `protobuf:"bytes,4,opt,name=hash,proto3,oneof"`
}

type GetAddressTransactionsRequest_Height struct {
	Height int32 `protobuf:"varint,5,opt,name=height,proto3,oneof"`
}

func (*GetAddressTransactionsRequest_Hash) isGetAddressTransactionsRequest_StartBlock() {}

func (*GetAddressTransactionsRequest_Height) isGetAddressTransactionsRequest_StartBlock() {}

func (m *GetAddressTransactionsRequest) GetStartBlock() isGetAddressTransactionsRequest_StartBlock {
	if m != nil {
		return m.StartBlock
	}
	return nil
}

func (m *GetAddressTransactionsRequest) GetHash() []byte {
	if x, ok := m.GetStartBlock().(*GetAddressTransactionsRequest_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *GetAddressTransactionsRequest) GetHeight() int32 {
	if x, ok := m.GetStartBlock().(*GetAddressTransactionsRequest_Height); ok {
		return x.Height
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetAddressTransactionsRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetAddressTransactionsRequest_OneofMarshaler, _GetAddressTransactionsRequest_OneofUnmarshaler, _GetAddressTransactionsRequest_OneofSizer, []interface{}{
		(*GetAddressTransactionsRequest_Hash)(nil),
		(*GetAddressTransactionsRequest_Height)(nil),
	}
}

func _GetAddressTransactionsRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetAddressTransactionsRequest)
	// start_block
	switch x := m.StartBlock.(type) {
	case *GetAddressTransactionsRequest_Hash:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Hash)
	case *GetAddressTransactionsRequest_Height:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case nil:
	default:
		return fmt.Errorf("GetAddressTransactionsRequest.StartBlock has unexpected type %T", x)
	}
	return nil
}

func _GetAddressTransactionsRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetAddressTransactionsRequest)
	switch tag {
	case 4: // start_block.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.StartBlock = &GetAddressTransactionsRequest_Hash{x}
		return true, err
	case 5: // start_block.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StartBlock = &GetAddressTransactionsRequest_Height{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _GetAddressTransactionsRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetAddressTransactionsRequest)
	// start_block
	switch x := m.StartBlock.(type) {
	case *GetAddressTransactionsRequest_Hash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Hash)))
		n += len(x.Hash)
	case *GetAddressTransactionsRequest_Height:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Height))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetAddressTransactionsResponse struct {
	ConfirmedTransactions   []*Transaction        `protobuf:"bytes,1,rep,name=confirmed_transactions,json=confirmedTransactions,proto3" json:"confirmed_transactions,omitempty"`
	UnconfirmedTransactions []*MempoolTransaction `protobuf:"bytes,2,rep,name=unconfirmed_transactions,json=unconfirmedTransactions,proto3" json:"unconfirmed_transactions,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}              `json:"-"`
	XXX_unrecognized        []byte                `json:"-"`
	XXX_sizecache           int32                 `json:"-"`
}

func (m *GetAddressTransactionsResponse) Reset()         { *m = GetAddressTransactionsResponse{} }
func (m *GetAddressTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAddressTransactionsResponse) ProtoMessage()    {}
func (*GetAddressTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{19}
}

func (m *GetAddressTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressTransactionsResponse.Unmarshal(m, b)
}
func (m *GetAddressTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressTransactionsResponse.Marshal(b, m, deterministic)
}
func (m *GetAddressTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressTransactionsResponse.Merge(m, src)
}
func (m *GetAddressTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAddressTransactionsResponse.Size(m)
}
func (m *GetAddressTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressTransactionsResponse proto.InternalMessageInfo

func (m *GetAddressTransactionsResponse) GetConfirmedTransactions() []*Transaction {
	if m != nil {
		return m.ConfirmedTransactions
	}
	return nil
}

func (m *GetAddressTransactionsResponse) GetUnconfirmedTransactions() []*MempoolTransaction {
	if m != nil {
		return m.UnconfirmedTransactions
	}
	return nil
}

type GetRawAddressTransactionsRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Control the number of transactions to be fetched from the blockchain.
	// These controls only apply to the confirmed transactions. All unconfirmed
	// ones will be returned always.
	NbSkip  uint32 `protobuf:"varint,2,opt,name=nb_skip,json=nbSkip,proto3" json:"nb_skip,omitempty"`
	NbFetch uint32 `protobuf:"varint,3,opt,name=nb_fetch,json=nbFetch,proto3" json:"nb_fetch,omitempty"`
	// If the start block is provided it will only return transactions after this
	// block. This should be used if possible to save bandwidth.
	//
	// Types that are valid to be assigned to StartBlock:
	//	*GetRawAddressTransactionsRequest_Hash
	//	*GetRawAddressTransactionsRequest_Height
	StartBlock           isGetRawAddressTransactionsRequest_StartBlock `protobuf_oneof:"start_block"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *GetRawAddressTransactionsRequest) Reset()         { *m = GetRawAddressTransactionsRequest{} }
func (m *GetRawAddressTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRawAddressTransactionsRequest) ProtoMessage()    {}
func (*GetRawAddressTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{20}
}

func (m *GetRawAddressTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawAddressTransactionsRequest.Unmarshal(m, b)
}
func (m *GetRawAddressTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawAddressTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *GetRawAddressTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawAddressTransactionsRequest.Merge(m, src)
}
func (m *GetRawAddressTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRawAddressTransactionsRequest.Size(m)
}
func (m *GetRawAddressTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawAddressTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawAddressTransactionsRequest proto.InternalMessageInfo

func (m *GetRawAddressTransactionsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetRawAddressTransactionsRequest) GetNbSkip() uint32 {
	if m != nil {
		return m.NbSkip
	}
	return 0
}

func (m *GetRawAddressTransactionsRequest) GetNbFetch() uint32 {
	if m != nil {
		return m.NbFetch
	}
	return 0
}

type isGetRawAddressTransactionsRequest_StartBlock interface {
	isGetRawAddressTransactionsRequest_StartBlock()
}

type GetRawAddressTransactionsRequest_Hash struct {
	Hash []byte `protobuf:"bytes,4,opt,name=hash,proto3,oneof"`
}

type GetRawAddressTransactionsRequest_Height struct {
	Height int32 `protobuf:"varint,5,opt,name=height,proto3,oneof"`
}

func (*GetRawAddressTransactionsRequest_Hash) isGetRawAddressTransactionsRequest_StartBlock() {}

func (*GetRawAddressTransactionsRequest_Height) isGetRawAddressTransactionsRequest_StartBlock() {}

func (m *GetRawAddressTransactionsRequest) GetStartBlock() isGetRawAddressTransactionsRequest_StartBlock {
	if m != nil {
		return m.StartBlock
	}
	return nil
}

func (m *GetRawAddressTransactionsRequest) GetHash() []byte {
	if x, ok := m.GetStartBlock().(*GetRawAddressTransactionsRequest_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *GetRawAddressTransactionsRequest) GetHeight() int32 {
	if x, ok := m.GetStartBlock().(*GetRawAddressTransactionsRequest_Height); ok {
		return x.Height
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetRawAddressTransactionsRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetRawAddressTransactionsRequest_OneofMarshaler, _GetRawAddressTransactionsRequest_OneofUnmarshaler, _GetRawAddressTransactionsRequest_OneofSizer, []interface{}{
		(*GetRawAddressTransactionsRequest_Hash)(nil),
		(*GetRawAddressTransactionsRequest_Height)(nil),
	}
}

func _GetRawAddressTransactionsRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetRawAddressTransactionsRequest)
	// start_block
	switch x := m.StartBlock.(type) {
	case *GetRawAddressTransactionsRequest_Hash:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Hash)
	case *GetRawAddressTransactionsRequest_Height:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case nil:
	default:
		return fmt.Errorf("GetRawAddressTransactionsRequest.StartBlock has unexpected type %T", x)
	}
	return nil
}

func _GetRawAddressTransactionsRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetRawAddressTransactionsRequest)
	switch tag {
	case 4: // start_block.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.StartBlock = &GetRawAddressTransactionsRequest_Hash{x}
		return true, err
	case 5: // start_block.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StartBlock = &GetRawAddressTransactionsRequest_Height{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _GetRawAddressTransactionsRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetRawAddressTransactionsRequest)
	// start_block
	switch x := m.StartBlock.(type) {
	case *GetRawAddressTransactionsRequest_Hash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Hash)))
		n += len(x.Hash)
	case *GetRawAddressTransactionsRequest_Height:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Height))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetRawAddressTransactionsResponse struct {
	ConfirmedTransactions   [][]byte `protobuf:"bytes,1,rep,name=confirmed_transactions,json=confirmedTransactions,proto3" json:"confirmed_transactions,omitempty"`
	UnconfirmedTransactions [][]byte `protobuf:"bytes,2,rep,name=unconfirmed_transactions,json=unconfirmedTransactions,proto3" json:"unconfirmed_transactions,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *GetRawAddressTransactionsResponse) Reset()         { *m = GetRawAddressTransactionsResponse{} }
func (m *GetRawAddressTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawAddressTransactionsResponse) ProtoMessage()    {}
func (*GetRawAddressTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{21}
}

func (m *GetRawAddressTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawAddressTransactionsResponse.Unmarshal(m, b)
}
func (m *GetRawAddressTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawAddressTransactionsResponse.Marshal(b, m, deterministic)
}
func (m *GetRawAddressTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawAddressTransactionsResponse.Merge(m, src)
}
func (m *GetRawAddressTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawAddressTransactionsResponse.Size(m)
}
func (m *GetRawAddressTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawAddressTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawAddressTransactionsResponse proto.InternalMessageInfo

func (m *GetRawAddressTransactionsResponse) GetConfirmedTransactions() [][]byte {
	if m != nil {
		return m.ConfirmedTransactions
	}
	return nil
}

func (m *GetRawAddressTransactionsResponse) GetUnconfirmedTransactions() [][]byte {
	if m != nil {
		return m.UnconfirmedTransactions
	}
	return nil
}

type GetAddressUnspentOutputsRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddressUnspentOutputsRequest) Reset()         { *m = GetAddressUnspentOutputsRequest{} }
func (m *GetAddressUnspentOutputsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddressUnspentOutputsRequest) ProtoMessage()    {}
func (*GetAddressUnspentOutputsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{22}
}

func (m *GetAddressUnspentOutputsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressUnspentOutputsRequest.Unmarshal(m, b)
}
func (m *GetAddressUnspentOutputsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressUnspentOutputsRequest.Marshal(b, m, deterministic)
}
func (m *GetAddressUnspentOutputsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressUnspentOutputsRequest.Merge(m, src)
}
func (m *GetAddressUnspentOutputsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddressUnspentOutputsRequest.Size(m)
}
func (m *GetAddressUnspentOutputsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressUnspentOutputsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressUnspentOutputsRequest proto.InternalMessageInfo

func (m *GetAddressUnspentOutputsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetAddressUnspentOutputsResponse struct {
	Outputs              []*UnspentOutput `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAddressUnspentOutputsResponse) Reset()         { *m = GetAddressUnspentOutputsResponse{} }
func (m *GetAddressUnspentOutputsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAddressUnspentOutputsResponse) ProtoMessage()    {}
func (*GetAddressUnspentOutputsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{23}
}

func (m *GetAddressUnspentOutputsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressUnspentOutputsResponse.Unmarshal(m, b)
}
func (m *GetAddressUnspentOutputsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressUnspentOutputsResponse.Marshal(b, m, deterministic)
}
func (m *GetAddressUnspentOutputsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressUnspentOutputsResponse.Merge(m, src)
}
func (m *GetAddressUnspentOutputsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAddressUnspentOutputsResponse.Size(m)
}
func (m *GetAddressUnspentOutputsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressUnspentOutputsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressUnspentOutputsResponse proto.InternalMessageInfo

func (m *GetAddressUnspentOutputsResponse) GetOutputs() []*UnspentOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type GetMerkleProofRequest struct {
	TransactionHash      []byte   `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMerkleProofRequest) Reset()         { *m = GetMerkleProofRequest{} }
func (m *GetMerkleProofRequest) String() string { return proto.CompactTextString(m) }
func (*GetMerkleProofRequest) ProtoMessage()    {}
func (*GetMerkleProofRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{24}
}

func (m *GetMerkleProofRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMerkleProofRequest.Unmarshal(m, b)
}
func (m *GetMerkleProofRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMerkleProofRequest.Marshal(b, m, deterministic)
}
func (m *GetMerkleProofRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMerkleProofRequest.Merge(m, src)
}
func (m *GetMerkleProofRequest) XXX_Size() int {
	return xxx_messageInfo_GetMerkleProofRequest.Size(m)
}
func (m *GetMerkleProofRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMerkleProofRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMerkleProofRequest proto.InternalMessageInfo

func (m *GetMerkleProofRequest) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

type GetMerkleProofResponse struct {
	Block                *BlockInfo `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Hashes               [][]byte   `protobuf:"bytes,2,rep,name=hashes,proto3" json:"hashes,omitempty"`
	Flags                []byte     `protobuf:"bytes,3,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetMerkleProofResponse) Reset()         { *m = GetMerkleProofResponse{} }
func (m *GetMerkleProofResponse) String() string { return proto.CompactTextString(m) }
func (*GetMerkleProofResponse) ProtoMessage()    {}
func (*GetMerkleProofResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{25}
}

func (m *GetMerkleProofResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMerkleProofResponse.Unmarshal(m, b)
}
func (m *GetMerkleProofResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMerkleProofResponse.Marshal(b, m, deterministic)
}
func (m *GetMerkleProofResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMerkleProofResponse.Merge(m, src)
}
func (m *GetMerkleProofResponse) XXX_Size() int {
	return xxx_messageInfo_GetMerkleProofResponse.Size(m)
}
func (m *GetMerkleProofResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMerkleProofResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMerkleProofResponse proto.InternalMessageInfo

func (m *GetMerkleProofResponse) GetBlock() *BlockInfo {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *GetMerkleProofResponse) GetHashes() [][]byte {
	if m != nil {
		return m.Hashes
	}
	return nil
}

func (m *GetMerkleProofResponse) GetFlags() []byte {
	if m != nil {
		return m.Flags
	}
	return nil
}

type SubmitTransactionRequest struct {
	Transaction          []byte   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionRequest) Reset()         { *m = SubmitTransactionRequest{} }
func (m *SubmitTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionRequest) ProtoMessage()    {}
func (*SubmitTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{26}
}

func (m *SubmitTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionRequest.Unmarshal(m, b)
}
func (m *SubmitTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionRequest.Merge(m, src)
}
func (m *SubmitTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionRequest.Size(m)
}
func (m *SubmitTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionRequest proto.InternalMessageInfo

func (m *SubmitTransactionRequest) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SubmitTransactionResponse struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionResponse) Reset()         { *m = SubmitTransactionResponse{} }
func (m *SubmitTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionResponse) ProtoMessage()    {}
func (*SubmitTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{27}
}

func (m *SubmitTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionResponse.Unmarshal(m, b)
}
func (m *SubmitTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionResponse.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionResponse.Merge(m, src)
}
func (m *SubmitTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionResponse.Size(m)
}
func (m *SubmitTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionResponse proto.InternalMessageInfo

func (m *SubmitTransactionResponse) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type SubscribeTransactionsRequest struct {
	Subscribe   *TransactionFilter `protobuf:"bytes,1,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	Unsubscribe *TransactionFilter `protobuf:"bytes,2,opt,name=unsubscribe,proto3" json:"unsubscribe,omitempty"`
	// When this is true, new transactions coming in from the mempool are
	// included apart from the ones confirmed in a block.
	IncludeMempool bool `protobuf:"varint,3,opt,name=include_mempool,json=includeMempool,proto3" json:"include_mempool,omitempty"`
	// When this is true, transactions are included when they are confirmed.
	// This notification is sent in addition to any requested mempool notifications.
	IncludeInBlock       bool     `protobuf:"varint,4,opt,name=include_in_block,json=includeInBlock,proto3" json:"include_in_block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeTransactionsRequest) Reset()         { *m = SubscribeTransactionsRequest{} }
func (m *SubscribeTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeTransactionsRequest) ProtoMessage()    {}
func (*SubscribeTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{28}
}

func (m *SubscribeTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeTransactionsRequest.Unmarshal(m, b)
}
func (m *SubscribeTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeTransactionsRequest.Merge(m, src)
}
func (m *SubscribeTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeTransactionsRequest.Size(m)
}
func (m *SubscribeTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeTransactionsRequest proto.InternalMessageInfo

func (m *SubscribeTransactionsRequest) GetSubscribe() *TransactionFilter {
	if m != nil {
		return m.Subscribe
	}
	return nil
}

func (m *SubscribeTransactionsRequest) GetUnsubscribe() *TransactionFilter {
	if m != nil {
		return m.Unsubscribe
	}
	return nil
}

func (m *SubscribeTransactionsRequest) GetIncludeMempool() bool {
	if m != nil {
		return m.IncludeMempool
	}
	return false
}

func (m *SubscribeTransactionsRequest) GetIncludeInBlock() bool {
	if m != nil {
		return m.IncludeInBlock
	}
	return false
}

type SubscribeBlocksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeBlocksRequest) Reset()         { *m = SubscribeBlocksRequest{} }
func (m *SubscribeBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeBlocksRequest) ProtoMessage()    {}
func (*SubscribeBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{29}
}

func (m *SubscribeBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeBlocksRequest.Unmarshal(m, b)
}
func (m *SubscribeBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeBlocksRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeBlocksRequest.Merge(m, src)
}
func (m *SubscribeBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeBlocksRequest.Size(m)
}
func (m *SubscribeBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeBlocksRequest proto.InternalMessageInfo

type BlockNotification struct {
	Type                 BlockNotification_Type `protobuf:"varint,1,opt,name=type,proto3,enum=pb.BlockNotification_Type" json:"type,omitempty"`
	Block                *BlockInfo             `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BlockNotification) Reset()         { *m = BlockNotification{} }
func (m *BlockNotification) String() string { return proto.CompactTextString(m) }
func (*BlockNotification) ProtoMessage()    {}
func (*BlockNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{30}
}

func (m *BlockNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockNotification.Unmarshal(m, b)
}
func (m *BlockNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockNotification.Marshal(b, m, deterministic)
}
func (m *BlockNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockNotification.Merge(m, src)
}
func (m *BlockNotification) XXX_Size() int {
	return xxx_messageInfo_BlockNotification.Size(m)
}
func (m *BlockNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockNotification.DiscardUnknown(m)
}

var xxx_messageInfo_BlockNotification proto.InternalMessageInfo

func (m *BlockNotification) GetType() BlockNotification_Type {
	if m != nil {
		return m.Type
	}
	return BlockNotification_CONNECTED
}

func (m *BlockNotification) GetBlock() *BlockInfo {
	if m != nil {
		return m.Block
	}
	return nil
}

type TransactionNotification struct {
	Type TransactionNotification_Type `protobuf:"varint,1,opt,name=type,proto3,enum=pb.TransactionNotification_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Transaction:
	//	*TransactionNotification_ConfirmedTransaction
	//	*TransactionNotification_UnconfirmedTransaction
	Transaction          isTransactionNotification_Transaction `protobuf_oneof:"transaction"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *TransactionNotification) Reset()         { *m = TransactionNotification{} }
func (m *TransactionNotification) String() string { return proto.CompactTextString(m) }
func (*TransactionNotification) ProtoMessage()    {}
func (*TransactionNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{31}
}

func (m *TransactionNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionNotification.Unmarshal(m, b)
}
func (m *TransactionNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionNotification.Marshal(b, m, deterministic)
}
func (m *TransactionNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionNotification.Merge(m, src)
}
func (m *TransactionNotification) XXX_Size() int {
	return xxx_messageInfo_TransactionNotification.Size(m)
}
func (m *TransactionNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionNotification proto.InternalMessageInfo

func (m *TransactionNotification) GetType() TransactionNotification_Type {
	if m != nil {
		return m.Type
	}
	return TransactionNotification_UNCONFIRMED
}

type isTransactionNotification_Transaction interface {
	isTransactionNotification_Transaction()
}

type TransactionNotification_ConfirmedTransaction struct {
	ConfirmedTransaction *Transaction `protobuf:"bytes,2,opt,name=confirmed_transaction,json=confirmedTransaction,proto3,oneof"`
}

type TransactionNotification_UnconfirmedTransaction struct {
	UnconfirmedTransaction *MempoolTransaction `protobuf:"bytes,3,opt,name=unconfirmed_transaction,json=unconfirmedTransaction,proto3,oneof"`
}

func (*TransactionNotification_ConfirmedTransaction) isTransactionNotification_Transaction() {}

func (*TransactionNotification_UnconfirmedTransaction) isTransactionNotification_Transaction() {}

func (m *TransactionNotification) GetTransaction() isTransactionNotification_Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *TransactionNotification) GetConfirmedTransaction() *Transaction {
	if x, ok := m.GetTransaction().(*TransactionNotification_ConfirmedTransaction); ok {
		return x.ConfirmedTransaction
	}
	return nil
}

func (m *TransactionNotification) GetUnconfirmedTransaction() *MempoolTransaction {
	if x, ok := m.GetTransaction().(*TransactionNotification_UnconfirmedTransaction); ok {
		return x.UnconfirmedTransaction
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TransactionNotification) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TransactionNotification_OneofMarshaler, _TransactionNotification_OneofUnmarshaler, _TransactionNotification_OneofSizer, []interface{}{
		(*TransactionNotification_ConfirmedTransaction)(nil),
		(*TransactionNotification_UnconfirmedTransaction)(nil),
	}
}

func _TransactionNotification_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TransactionNotification)
	// transaction
	switch x := m.Transaction.(type) {
	case *TransactionNotification_ConfirmedTransaction:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfirmedTransaction); err != nil {
			return err
		}
	case *TransactionNotification_UnconfirmedTransaction:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnconfirmedTransaction); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TransactionNotification.Transaction has unexpected type %T", x)
	}
	return nil
}

func _TransactionNotification_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TransactionNotification)
	switch tag {
	case 2: // transaction.confirmed_transaction
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Transaction)
		err := b.DecodeMessage(msg)
		m.Transaction = &TransactionNotification_ConfirmedTransaction{msg}
		return true, err
	case 3: // transaction.unconfirmed_transaction
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MempoolTransaction)
		err := b.DecodeMessage(msg)
		m.Transaction = &TransactionNotification_UnconfirmedTransaction{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TransactionNotification_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TransactionNotification)
	// transaction
	switch x := m.Transaction.(type) {
	case *TransactionNotification_ConfirmedTransaction:
		s := proto.Size(x.ConfirmedTransaction)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TransactionNotification_UnconfirmedTransaction:
		s := proto.Size(x.UnconfirmedTransaction)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BlockInfo struct {
	// Identification.
	Hash   []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Block header data.
	Version       int32  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	PreviousBlock []byte `protobuf:"bytes,4,opt,name=previous_block,json=previousBlock,proto3" json:"previous_block,omitempty"`
	MerkleRoot    []byte `protobuf:"bytes,5,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	Timestamp     int64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bits          uint32 `protobuf:"varint,7,opt,name=bits,proto3" json:"bits,omitempty"`
	Nonce         uint32 `protobuf:"varint,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Metadata.
	Confirmations        int32    `protobuf:"varint,9,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Difficulty           float64  `protobuf:"fixed64,10,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	NextBlockHash        []byte   `protobuf:"bytes,11,opt,name=next_block_hash,json=nextBlockHash,proto3" json:"next_block_hash,omitempty"`
	Size                 int32    `protobuf:"varint,12,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockInfo) Reset()         { *m = BlockInfo{} }
func (m *BlockInfo) String() string { return proto.CompactTextString(m) }
func (*BlockInfo) ProtoMessage()    {}
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{32}
}

func (m *BlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfo.Unmarshal(m, b)
}
func (m *BlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfo.Marshal(b, m, deterministic)
}
func (m *BlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfo.Merge(m, src)
}
func (m *BlockInfo) XXX_Size() int {
	return xxx_messageInfo_BlockInfo.Size(m)
}
func (m *BlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfo proto.InternalMessageInfo

func (m *BlockInfo) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockInfo) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockInfo) GetPreviousBlock() []byte {
	if m != nil {
		return m.PreviousBlock
	}
	return nil
}

func (m *BlockInfo) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *BlockInfo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockInfo) GetBits() uint32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *BlockInfo) GetNonce() uint32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *BlockInfo) GetConfirmations() int32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *BlockInfo) GetDifficulty() float64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *BlockInfo) GetNextBlockHash() []byte {
	if m != nil {
		return m.NextBlockHash
	}
	return nil
}

func (m *BlockInfo) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type Block struct {
	Info                 *BlockInfo               `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	TransactionData      []*Block_TransactionData `protobuf:"bytes,2,rep,name=transaction_data,json=transactionData,proto3" json:"transaction_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{33}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetInfo() *BlockInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Block) GetTransactionData() []*Block_TransactionData {
	if m != nil {
		return m.TransactionData
	}
	return nil
}

type Block_TransactionData struct {
	// Either one of the two following is provided, depending on the request.
	//
	// Types that are valid to be assigned to TxidsOrTxs:
	//	*Block_TransactionData_TransactionHash
	//	*Block_TransactionData_Transaction
	TxidsOrTxs           isBlock_TransactionData_TxidsOrTxs `protobuf_oneof:"txids_or_txs"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Block_TransactionData) Reset()         { *m = Block_TransactionData{} }
func (m *Block_TransactionData) String() string { return proto.CompactTextString(m) }
func (*Block_TransactionData) ProtoMessage()    {}
func (*Block_TransactionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{33, 0}
}

func (m *Block_TransactionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block_TransactionData.Unmarshal(m, b)
}
func (m *Block_TransactionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block_TransactionData.Marshal(b, m, deterministic)
}
func (m *Block_TransactionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block_TransactionData.Merge(m, src)
}
func (m *Block_TransactionData) XXX_Size() int {
	return xxx_messageInfo_Block_TransactionData.Size(m)
}
func (m *Block_TransactionData) XXX_DiscardUnknown() {
	xxx_messageInfo_Block_TransactionData.DiscardUnknown(m)
}

var xxx_messageInfo_Block_TransactionData proto.InternalMessageInfo

type isBlock_TransactionData_TxidsOrTxs interface {
	isBlock_TransactionData_TxidsOrTxs()
}

type Block_TransactionData_TransactionHash struct {
	TransactionHash []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3,oneof"`
}

type Block_TransactionData_Transaction struct {
	Transaction *Transaction `protobuf:"bytes,2,opt,name=transaction,proto3,oneof"`
}

func (*Block_TransactionData_TransactionHash) isBlock_TransactionData_TxidsOrTxs() {}

func (*Block_TransactionData_Transaction) isBlock_TransactionData_TxidsOrTxs() {}

func (m *Block_TransactionData) GetTxidsOrTxs() isBlock_TransactionData_TxidsOrTxs {
	if m != nil {
		return m.TxidsOrTxs
	}
	return nil
}

func (m *Block_TransactionData) GetTransactionHash() []byte {
	if x, ok := m.GetTxidsOrTxs().(*Block_TransactionData_TransactionHash); ok {
		return x.TransactionHash
	}
	return nil
}

func (m *Block_TransactionData) GetTransaction() *Transaction {
	if x, ok := m.GetTxidsOrTxs().(*Block_TransactionData_Transaction); ok {
		return x.Transaction
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Block_TransactionData) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Block_TransactionData_OneofMarshaler, _Block_TransactionData_OneofUnmarshaler, _Block_TransactionData_OneofSizer, []interface{}{
		(*Block_TransactionData_TransactionHash)(nil),
		(*Block_TransactionData_Transaction)(nil),
	}
}

func _Block_TransactionData_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Block_TransactionData)
	// txids_or_txs
	switch x := m.TxidsOrTxs.(type) {
	case *Block_TransactionData_TransactionHash:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.TransactionHash)
	case *Block_TransactionData_Transaction:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transaction); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Block_TransactionData.TxidsOrTxs has unexpected type %T", x)
	}
	return nil
}

func _Block_TransactionData_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Block_TransactionData)
	switch tag {
	case 1: // txids_or_txs.transaction_hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.TxidsOrTxs = &Block_TransactionData_TransactionHash{x}
		return true, err
	case 2: // txids_or_txs.transaction
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Transaction)
		err := b.DecodeMessage(msg)
		m.TxidsOrTxs = &Block_TransactionData_Transaction{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Block_TransactionData_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Block_TransactionData)
	// txids_or_txs
	switch x := m.TxidsOrTxs.(type) {
	case *Block_TransactionData_TransactionHash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TransactionHash)))
		n += len(x.TransactionHash)
	case *Block_TransactionData_Transaction:
		s := proto.Size(x.Transaction)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Transaction struct {
	Hash     []byte                `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Version  int32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Inputs   []*Transaction_Input  `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs  []*Transaction_Output `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`
	LockTime uint32                `protobuf:"varint,5,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	// Metadata
	Size                 int32    `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Timestamp            int64    `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Confirmations        int32    `protobuf:"varint,10,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	BlockHeight          int32    `protobuf:"varint,11,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,12,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{34}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Transaction) GetInputs() []*Transaction_Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Transaction) GetOutputs() []*Transaction_Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Transaction) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *Transaction) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Transaction) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Transaction) GetConfirmations() int32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *Transaction) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *Transaction) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type Transaction_Input struct {
	Index                uint32                      `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Outpoint             *Transaction_Input_Outpoint `protobuf:"bytes,2,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	SignatureScript      []byte                      `protobuf:"bytes,3,opt,name=signature_script,json=signatureScript,proto3" json:"signature_script,omitempty"`
	Sequence             uint32                      `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Value                int64                       `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
	PreviousScript       []byte                      `protobuf:"bytes,6,opt,name=previous_script,json=previousScript,proto3" json:"previous_script,omitempty"`
	Address              string                      `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Transaction_Input) Reset()         { *m = Transaction_Input{} }
func (m *Transaction_Input) String() string { return proto.CompactTextString(m) }
func (*Transaction_Input) ProtoMessage()    {}
func (*Transaction_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{34, 0}
}

func (m *Transaction_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_Input.Unmarshal(m, b)
}
func (m *Transaction_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_Input.Marshal(b, m, deterministic)
}
func (m *Transaction_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_Input.Merge(m, src)
}
func (m *Transaction_Input) XXX_Size() int {
	return xxx_messageInfo_Transaction_Input.Size(m)
}
func (m *Transaction_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_Input proto.InternalMessageInfo

func (m *Transaction_Input) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Transaction_Input) GetOutpoint() *Transaction_Input_Outpoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *Transaction_Input) GetSignatureScript() []byte {
	if m != nil {
		return m.SignatureScript
	}
	return nil
}

func (m *Transaction_Input) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Transaction_Input) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction_Input) GetPreviousScript() []byte {
	if m != nil {
		return m.PreviousScript
	}
	return nil
}

func (m *Transaction_Input) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Transaction_Input_Outpoint struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_Input_Outpoint) Reset()         { *m = Transaction_Input_Outpoint{} }
func (m *Transaction_Input_Outpoint) String() string { return proto.CompactTextString(m) }
func (*Transaction_Input_Outpoint) ProtoMessage()    {}
func (*Transaction_Input_Outpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{34, 0, 0}
}

func (m *Transaction_Input_Outpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_Input_Outpoint.Unmarshal(m, b)
}
func (m *Transaction_Input_Outpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_Input_Outpoint.Marshal(b, m, deterministic)
}
func (m *Transaction_Input_Outpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_Input_Outpoint.Merge(m, src)
}
func (m *Transaction_Input_Outpoint) XXX_Size() int {
	return xxx_messageInfo_Transaction_Input_Outpoint.Size(m)
}
func (m *Transaction_Input_Outpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_Input_Outpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_Input_Outpoint proto.InternalMessageInfo

func (m *Transaction_Input_Outpoint) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction_Input_Outpoint) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Transaction_Output struct {
	Index                uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	PubkeyScript         []byte   `protobuf:"bytes,3,opt,name=pubkey_script,json=pubkeyScript,proto3" json:"pubkey_script,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	ScriptClass          string   `protobuf:"bytes,5,opt,name=script_class,json=scriptClass,proto3" json:"script_class,omitempty"`
	DisassembledScript   string   `protobuf:"bytes,6,opt,name=disassembled_script,json=disassembledScript,proto3" json:"disassembled_script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_Output) Reset()         { *m = Transaction_Output{} }
func (m *Transaction_Output) String() string { return proto.CompactTextString(m) }
func (*Transaction_Output) ProtoMessage()    {}
func (*Transaction_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{34, 1}
}

func (m *Transaction_Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_Output.Unmarshal(m, b)
}
func (m *Transaction_Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_Output.Marshal(b, m, deterministic)
}
func (m *Transaction_Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_Output.Merge(m, src)
}
func (m *Transaction_Output) XXX_Size() int {
	return xxx_messageInfo_Transaction_Output.Size(m)
}
func (m *Transaction_Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_Output proto.InternalMessageInfo

func (m *Transaction_Output) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Transaction_Output) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction_Output) GetPubkeyScript() []byte {
	if m != nil {
		return m.PubkeyScript
	}
	return nil
}

func (m *Transaction_Output) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Transaction_Output) GetScriptClass() string {
	if m != nil {
		return m.ScriptClass
	}
	return ""
}

func (m *Transaction_Output) GetDisassembledScript() string {
	if m != nil {
		return m.DisassembledScript
	}
	return ""
}

type MempoolTransaction struct {
	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// The time when the transaction was added too the pool.
	AddedTime int64 `protobuf:"varint,2,opt,name=added_time,json=addedTime,proto3" json:"added_time,omitempty"`
	// The block height when the transaction was added to the pool.
	AddedHeight int32 `protobuf:"varint,3,opt,name=added_height,json=addedHeight,proto3" json:"added_height,omitempty"`
	// The total fee in satoshi the transaction pays.
	Fee int64 `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	// The fee in satoshi per kilobyte the transaction pays.
	FeePerKb int64 `protobuf:"varint,5,opt,name=fee_per_kb,json=feePerKb,proto3" json:"fee_per_kb,omitempty"`
	// The priority of the transaction when it was added to the pool.
	StartingPriority     float64  `protobuf:"fixed64,6,opt,name=starting_priority,json=startingPriority,proto3" json:"starting_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolTransaction) Reset()         { *m = MempoolTransaction{} }
func (m *MempoolTransaction) String() string { return proto.CompactTextString(m) }
func (*MempoolTransaction) ProtoMessage()    {}
func (*MempoolTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{35}
}

func (m *MempoolTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolTransaction.Unmarshal(m, b)
}
func (m *MempoolTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolTransaction.Marshal(b, m, deterministic)
}
func (m *MempoolTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolTransaction.Merge(m, src)
}
func (m *MempoolTransaction) XXX_Size() int {
	return xxx_messageInfo_MempoolTransaction.Size(m)
}
func (m *MempoolTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolTransaction proto.InternalMessageInfo

func (m *MempoolTransaction) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *MempoolTransaction) GetAddedTime() int64 {
	if m != nil {
		return m.AddedTime
	}
	return 0
}

func (m *MempoolTransaction) GetAddedHeight() int32 {
	if m != nil {
		return m.AddedHeight
	}
	return 0
}

func (m *MempoolTransaction) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MempoolTransaction) GetFeePerKb() int64 {
	if m != nil {
		return m.FeePerKb
	}
	return 0
}

func (m *MempoolTransaction) GetStartingPriority() float64 {
	if m != nil {
		return m.StartingPriority
	}
	return 0
}

type UnspentOutput struct {
	Outpoint             *Transaction_Input_Outpoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	PubkeyScript         []byte                      `protobuf:"bytes,2,opt,name=pubkey_script,json=pubkeyScript,proto3" json:"pubkey_script,omitempty"`
	Value                int64                       `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	IsCoinbase           bool                        `protobuf:"varint,4,opt,name=is_coinbase,json=isCoinbase,proto3" json:"is_coinbase,omitempty"`
	BlockHeight          int32                       `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UnspentOutput) Reset()         { *m = UnspentOutput{} }
func (m *UnspentOutput) String() string { return proto.CompactTextString(m) }
func (*UnspentOutput) ProtoMessage()    {}
func (*UnspentOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{36}
}

func (m *UnspentOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnspentOutput.Unmarshal(m, b)
}
func (m *UnspentOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnspentOutput.Marshal(b, m, deterministic)
}
func (m *UnspentOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnspentOutput.Merge(m, src)
}
func (m *UnspentOutput) XXX_Size() int {
	return xxx_messageInfo_UnspentOutput.Size(m)
}
func (m *UnspentOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_UnspentOutput.DiscardUnknown(m)
}

var xxx_messageInfo_UnspentOutput proto.InternalMessageInfo

func (m *UnspentOutput) GetOutpoint() *Transaction_Input_Outpoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *UnspentOutput) GetPubkeyScript() []byte {
	if m != nil {
		return m.PubkeyScript
	}
	return nil
}

func (m *UnspentOutput) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *UnspentOutput) GetIsCoinbase() bool {
	if m != nil {
		return m.IsCoinbase
	}
	return false
}

func (m *UnspentOutput) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

type TransactionFilter struct {
	Addresses    []string                      `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Outpoints    []*Transaction_Input_Outpoint `protobuf:"bytes,2,rep,name=outpoints,proto3" json:"outpoints,omitempty"`
	DataElements [][]byte                      `protobuf:"bytes,3,rep,name=data_elements,json=dataElements,proto3" json:"data_elements,omitempty"`
	// Subscribed/Unsubscribe to everything. Other filters
	// will be ignored.
	AllTransactions      bool     `protobuf:"varint,4,opt,name=all_transactions,json=allTransactions,proto3" json:"all_transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionFilter) Reset()         { *m = TransactionFilter{} }
func (m *TransactionFilter) String() string { return proto.CompactTextString(m) }
func (*TransactionFilter) ProtoMessage()    {}
func (*TransactionFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9425015282cfe529, []int{37}
}

func (m *TransactionFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionFilter.Unmarshal(m, b)
}
func (m *TransactionFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionFilter.Marshal(b, m, deterministic)
}
func (m *TransactionFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionFilter.Merge(m, src)
}
func (m *TransactionFilter) XXX_Size() int {
	return xxx_messageInfo_TransactionFilter.Size(m)
}
func (m *TransactionFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionFilter proto.InternalMessageInfo

func (m *TransactionFilter) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *TransactionFilter) GetOutpoints() []*Transaction_Input_Outpoint {
	if m != nil {
		return m.Outpoints
	}
	return nil
}

func (m *TransactionFilter) GetDataElements() [][]byte {
	if m != nil {
		return m.DataElements
	}
	return nil
}

func (m *TransactionFilter) GetAllTransactions() bool {
	if m != nil {
		return m.AllTransactions
	}
	return false
}

func init() {
	proto.RegisterEnum("pb.GetBlockchainInfoResponse_BitcoinNet", GetBlockchainInfoResponse_BitcoinNet_name, GetBlockchainInfoResponse_BitcoinNet_value)
	proto.RegisterEnum("pb.BlockNotification_Type", BlockNotification_Type_name, BlockNotification_Type_value)
	proto.RegisterEnum("pb.TransactionNotification_Type", TransactionNotification_Type_name, TransactionNotification_Type_value)
	proto.RegisterType((*GetMempoolInfoRequest)(nil), "pb.GetMempoolInfoRequest")
	proto.RegisterType((*GetMempoolInfoResponse)(nil), "pb.GetMempoolInfoResponse")
	proto.RegisterType((*GetBlockchainInfoRequest)(nil), "pb.GetBlockchainInfoRequest")
	proto.RegisterType((*GetBlockchainInfoResponse)(nil), "pb.GetBlockchainInfoResponse")
	proto.RegisterType((*GetBlockInfoRequest)(nil), "pb.GetBlockInfoRequest")
	proto.RegisterType((*GetBlockInfoResponse)(nil), "pb.GetBlockInfoResponse")
	proto.RegisterType((*GetBlockRequest)(nil), "pb.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "pb.GetBlockResponse")
	proto.RegisterType((*GetRawBlockRequest)(nil), "pb.GetRawBlockRequest")
	proto.RegisterType((*GetRawBlockResponse)(nil), "pb.GetRawBlockResponse")
	proto.RegisterType((*GetBlockFilterRequest)(nil), "pb.GetBlockFilterRequest")
	proto.RegisterType((*GetBlockFilterResponse)(nil), "pb.GetBlockFilterResponse")
	proto.RegisterType((*GetHeadersRequest)(nil), "pb.GetHeadersRequest")
	proto.RegisterType((*GetHeadersResponse)(nil), "pb.GetHeadersResponse")
	proto.RegisterType((*GetTransactionRequest)(nil), "pb.GetTransactionRequest")
	proto.RegisterType((*GetTransactionResponse)(nil), "pb.GetTransactionResponse")
	proto.RegisterType((*GetRawTransactionRequest)(nil), "pb.GetRawTransactionRequest")
	proto.RegisterType((*GetRawTransactionResponse)(nil), "pb.GetRawTransactionResponse")
	proto.RegisterType((*GetAddressTransactionsRequest)(nil), "pb.GetAddressTransactionsRequest")
	proto.RegisterType((*GetAddressTransactionsResponse)(nil), "pb.GetAddressTransactionsResponse")
	proto.RegisterType((*GetRawAddressTransactionsRequest)(nil), "pb.GetRawAddressTransactionsRequest")
	proto.RegisterType((*GetRawAddressTransactionsResponse)(nil), "pb.GetRawAddressTransactionsResponse")
	proto.RegisterType((*GetAddressUnspentOutputsRequest)(nil), "pb.GetAddressUnspentOutputsRequest")
	proto.RegisterType((*GetAddressUnspentOutputsResponse)(nil), "pb.GetAddressUnspentOutputsResponse")
	proto.RegisterType((*GetMerkleProofRequest)(nil), "pb.GetMerkleProofRequest")
	proto.RegisterType((*GetMerkleProofResponse)(nil), "pb.GetMerkleProofResponse")
	proto.RegisterType((*SubmitTransactionRequest)(nil), "pb.SubmitTransactionRequest")
	proto.RegisterType((*SubmitTransactionResponse)(nil), "pb.SubmitTransactionResponse")
	proto.RegisterType((*SubscribeTransactionsRequest)(nil), "pb.SubscribeTransactionsRequest")
	proto.RegisterType((*SubscribeBlocksRequest)(nil), "pb.SubscribeBlocksRequest")
	proto.RegisterType((*BlockNotification)(nil), "pb.BlockNotification")
	proto.RegisterType((*TransactionNotification)(nil), "pb.TransactionNotification")
	proto.RegisterType((*BlockInfo)(nil), "pb.BlockInfo")
	proto.RegisterType((*Block)(nil), "pb.Block")
	proto.RegisterType((*Block_TransactionData)(nil), "pb.Block.TransactionData")
	proto.RegisterType((*Transaction)(nil), "pb.Transaction")
	proto.RegisterType((*Transaction_Input)(nil), "pb.Transaction.Input")
	proto.RegisterType((*Transaction_Input_Outpoint)(nil), "pb.Transaction.Input.Outpoint")
	proto.RegisterType((*Transaction_Output)(nil), "pb.Transaction.Output")
	proto.RegisterType((*MempoolTransaction)(nil), "pb.MempoolTransaction")
	proto.RegisterType((*UnspentOutput)(nil), "pb.UnspentOutput")
	proto.RegisterType((*TransactionFilter)(nil), "pb.TransactionFilter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BchrpcClient is the client API for Bchrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BchrpcClient interface {
	// Get info about the mempool.
	GetMempoolInfo(ctx context.Context, in *GetMempoolInfoRequest, opts ...grpc.CallOption) (*GetMempoolInfoResponse, error)
	// GetBlockchainInfo info about the blockchain including the most recent
	// block hash and height.
	GetBlockchainInfo(ctx context.Context, in *GetBlockchainInfoRequest, opts ...grpc.CallOption) (*GetBlockchainInfoResponse, error)
	// Get info about the given block.
	GetBlockInfo(ctx context.Context, in *GetBlockInfoRequest, opts ...grpc.CallOption) (*GetBlockInfoResponse, error)
	// Get a block.
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	// Get a serialized block.
	GetRawBlock(ctx context.Context, in *GetRawBlockRequest, opts ...grpc.CallOption) (*GetRawBlockResponse, error)
	// **Requires CfIndex**
	// Get a block filter.
	GetBlockFilter(ctx context.Context, in *GetBlockFilterRequest, opts ...grpc.CallOption) (*GetBlockFilterResponse, error)
	// This RPC sends a block locator object to the server and the server responds with
	// a batch of no more than 2000 headers. Upon parsing the block locator, if the server
	// concludes there has been a fork, it will send headers starting at the fork point,
	// or genesis if no blocks in the locator are in the best chain. If the locator is
	// already at the tip no headers will be returned.
	GetHeaders(ctx context.Context, in *GetHeadersRequest, opts ...grpc.CallOption) (*GetHeadersResponse, error)
	// Get a transaction given its hash.
	//
	// **Requires TxIndex**
	GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error)
	// Get a serialized transaction given its hash.
	//
	// **Requires TxIndex**
	GetRawTransaction(ctx context.Context, in *GetRawTransactionRequest, opts ...grpc.CallOption) (*GetRawTransactionResponse, error)
	// Returns the transactions for the given address. Offers offset,
	// limit, and from block options.
	//
	// **Requires AddressIndex**
	GetAddressTransactions(ctx context.Context, in *GetAddressTransactionsRequest, opts ...grpc.CallOption) (*GetAddressTransactionsResponse, error)
	// Returns the raw transactions for the given address. Offers offset,
	// limit, and from block options.
	//
	// **Requires AddressIndex**
	GetRawAddressTransactions(ctx context.Context, in *GetRawAddressTransactionsRequest, opts ...grpc.CallOption) (*GetRawAddressTransactionsResponse, error)
	// Returns all the unspent transaction outpoints for the given address.
	// Offers offset, limit, and from block options.
	//
	// **Requires AddressIndex**
	GetAddressUnspentOutputs(ctx context.Context, in *GetAddressUnspentOutputsRequest, opts ...grpc.CallOption) (*GetAddressUnspentOutputsResponse, error)
	// Returns a merkle (SPV) proof that the given transaction is in the provided block.
	//
	// **Requires TxIndex***
	GetMerkleProof(ctx context.Context, in *GetMerkleProofRequest, opts ...grpc.CallOption) (*GetMerkleProofResponse, error)
	// Submit a transaction to all connected peers.
	SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error)
	// Subscribe to relevant transactions based on the subscription requests.
	// The parameters to filter transactions on can be updated by sending new
	// SubscribeTransactionsRequest objects on the stream.
	//
	// This RPC does not use bi-directional streams and therefore can be used
	// with grpc-web. You will need to close and re-open the stream whenever
	// you want to update the addresses. If you are not using grpc-web
	// then SubscribeTransactionStream is more appropriate.
	//
	// **Requires TxIndex to receive input metadata**
	SubscribeTransactions(ctx context.Context, in *SubscribeTransactionsRequest, opts ...grpc.CallOption) (Bchrpc_SubscribeTransactionsClient, error)
	// Subscribe to relevant transactions based on the subscription requests.
	// The parameters to filter transactions on can be updated by sending new
	// SubscribeTransactionsRequest objects on the stream.
	//
	// Because this RPC using bi-directional streaming it cannot be used with
	// grpc-web.
	//
	// **Requires TxIndex to receive input metadata**
	SubscribeTransactionStream(ctx context.Context, opts ...grpc.CallOption) (Bchrpc_SubscribeTransactionStreamClient, error)
	// Subscribe to notifications of new blocks being connected to the blockchain
	// or blocks being disconnected.
	SubscribeBlocks(ctx context.Context, in *SubscribeBlocksRequest, opts ...grpc.CallOption) (Bchrpc_SubscribeBlocksClient, error)
}

type bchrpcClient struct {
	cc *grpc.ClientConn
}

func NewBchrpcClient(cc *grpc.ClientConn) BchrpcClient {
	return &bchrpcClient{cc}
}

func (c *bchrpcClient) GetMempoolInfo(ctx context.Context, in *GetMempoolInfoRequest, opts ...grpc.CallOption) (*GetMempoolInfoResponse, error) {
	out := new(GetMempoolInfoResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetMempoolInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetBlockchainInfo(ctx context.Context, in *GetBlockchainInfoRequest, opts ...grpc.CallOption) (*GetBlockchainInfoResponse, error) {
	out := new(GetBlockchainInfoResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetBlockchainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetBlockInfo(ctx context.Context, in *GetBlockInfoRequest, opts ...grpc.CallOption) (*GetBlockInfoResponse, error) {
	out := new(GetBlockInfoResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetBlockInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetRawBlock(ctx context.Context, in *GetRawBlockRequest, opts ...grpc.CallOption) (*GetRawBlockResponse, error) {
	out := new(GetRawBlockResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetRawBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetBlockFilter(ctx context.Context, in *GetBlockFilterRequest, opts ...grpc.CallOption) (*GetBlockFilterResponse, error) {
	out := new(GetBlockFilterResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetBlockFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetHeaders(ctx context.Context, in *GetHeadersRequest, opts ...grpc.CallOption) (*GetHeadersResponse, error) {
	out := new(GetHeadersResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetHeaders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error) {
	out := new(GetTransactionResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetRawTransaction(ctx context.Context, in *GetRawTransactionRequest, opts ...grpc.CallOption) (*GetRawTransactionResponse, error) {
	out := new(GetRawTransactionResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetRawTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetAddressTransactions(ctx context.Context, in *GetAddressTransactionsRequest, opts ...grpc.CallOption) (*GetAddressTransactionsResponse, error) {
	out := new(GetAddressTransactionsResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetAddressTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetRawAddressTransactions(ctx context.Context, in *GetRawAddressTransactionsRequest, opts ...grpc.CallOption) (*GetRawAddressTransactionsResponse, error) {
	out := new(GetRawAddressTransactionsResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetRawAddressTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetAddressUnspentOutputs(ctx context.Context, in *GetAddressUnspentOutputsRequest, opts ...grpc.CallOption) (*GetAddressUnspentOutputsResponse, error) {
	out := new(GetAddressUnspentOutputsResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetAddressUnspentOutputs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) GetMerkleProof(ctx context.Context, in *GetMerkleProofRequest, opts ...grpc.CallOption) (*GetMerkleProofResponse, error) {
	out := new(GetMerkleProofResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/GetMerkleProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error) {
	out := new(SubmitTransactionResponse)
	err := c.cc.Invoke(ctx, "/pb.bchrpc/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bchrpcClient) SubscribeTransactions(ctx context.Context, in *SubscribeTransactionsRequest, opts ...grpc.CallOption) (Bchrpc_SubscribeTransactionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Bchrpc_serviceDesc.Streams[0], "/pb.bchrpc/SubscribeTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &bchrpcSubscribeTransactionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Bchrpc_SubscribeTransactionsClient interface {
	Recv() (*TransactionNotification, error)
	grpc.ClientStream
}

type bchrpcSubscribeTransactionsClient struct {
	grpc.ClientStream
}

func (x *bchrpcSubscribeTransactionsClient) Recv() (*TransactionNotification, error) {
	m := new(TransactionNotification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bchrpcClient) SubscribeTransactionStream(ctx context.Context, opts ...grpc.CallOption) (Bchrpc_SubscribeTransactionStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Bchrpc_serviceDesc.Streams[1], "/pb.bchrpc/SubscribeTransactionStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &bchrpcSubscribeTransactionStreamClient{stream}
	return x, nil
}

type Bchrpc_SubscribeTransactionStreamClient interface {
	Send(*SubscribeTransactionsRequest) error
	Recv() (*TransactionNotification, error)
	grpc.ClientStream
}

type bchrpcSubscribeTransactionStreamClient struct {
	grpc.ClientStream
}

func (x *bchrpcSubscribeTransactionStreamClient) Send(m *SubscribeTransactionsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bchrpcSubscribeTransactionStreamClient) Recv() (*TransactionNotification, error) {
	m := new(TransactionNotification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bchrpcClient) SubscribeBlocks(ctx context.Context, in *SubscribeBlocksRequest, opts ...grpc.CallOption) (Bchrpc_SubscribeBlocksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Bchrpc_serviceDesc.Streams[2], "/pb.bchrpc/SubscribeBlocks", opts...)
	if err != nil {
		return nil, err
	}
	x := &bchrpcSubscribeBlocksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Bchrpc_SubscribeBlocksClient interface {
	Recv() (*BlockNotification, error)
	grpc.ClientStream
}

type bchrpcSubscribeBlocksClient struct {
	grpc.ClientStream
}

func (x *bchrpcSubscribeBlocksClient) Recv() (*BlockNotification, error) {
	m := new(BlockNotification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BchrpcServer is the server API for Bchrpc service.
type BchrpcServer interface {
	// Get info about the mempool.
	GetMempoolInfo(context.Context, *GetMempoolInfoRequest) (*GetMempoolInfoResponse, error)
	// GetBlockchainInfo info about the blockchain including the most recent
	// block hash and height.
	GetBlockchainInfo(context.Context, *GetBlockchainInfoRequest) (*GetBlockchainInfoResponse, error)
	// Get info about the given block.
	GetBlockInfo(context.Context, *GetBlockInfoRequest) (*GetBlockInfoResponse, error)
	// Get a block.
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	// Get a serialized block.
	GetRawBlock(context.Context, *GetRawBlockRequest) (*GetRawBlockResponse, error)
	// **Requires CfIndex**
	// Get a block filter.
	GetBlockFilter(context.Context, *GetBlockFilterRequest) (*GetBlockFilterResponse, error)
	// This RPC sends a block locator object to the server and the server responds with
	// a batch of no more than 2000 headers. Upon parsing the block locator, if the server
	// concludes there has been a fork, it will send headers starting at the fork point,
	// or genesis if no blocks in the locator are in the best chain. If the locator is
	// already at the tip no headers will be returned.
	GetHeaders(context.Context, *GetHeadersRequest) (*GetHeadersResponse, error)
	// Get a transaction given its hash.
	//
	// **Requires TxIndex**
	GetTransaction(context.Context, *GetTransactionRequest) (*GetTransactionResponse, error)
	// Get a serialized transaction given its hash.
	//
	// **Requires TxIndex**
	GetRawTransaction(context.Context, *GetRawTransactionRequest) (*GetRawTransactionResponse, error)
	// Returns the transactions for the given address. Offers offset,
	// limit, and from block options.
	//
	// **Requires AddressIndex**
	GetAddressTransactions(context.Context, *GetAddressTransactionsRequest) (*GetAddressTransactionsResponse, error)
	// Returns the raw transactions for the given address. Offers offset,
	// limit, and from block options.
	//
	// **Requires AddressIndex**
	GetRawAddressTransactions(context.Context, *GetRawAddressTransactionsRequest) (*GetRawAddressTransactionsResponse, error)
	// Returns all the unspent transaction outpoints for the given address.
	// Offers offset, limit, and from block options.
	//
	// **Requires AddressIndex**
	GetAddressUnspentOutputs(context.Context, *GetAddressUnspentOutputsRequest) (*GetAddressUnspentOutputsResponse, error)
	// Returns a merkle (SPV) proof that the given transaction is in the provided block.
	//
	// **Requires TxIndex***
	GetMerkleProof(context.Context, *GetMerkleProofRequest) (*GetMerkleProofResponse, error)
	// Submit a transaction to all connected peers.
	SubmitTransaction(context.Context, *SubmitTransactionRequest) (*SubmitTransactionResponse, error)
	// Subscribe to relevant transactions based on the subscription requests.
	// The parameters to filter transactions on can be updated by sending new
	// SubscribeTransactionsRequest objects on the stream.
	//
	// This RPC does not use bi-directional streams and therefore can be used
	// with grpc-web. You will need to close and re-open the stream whenever
	// you want to update the addresses. If you are not using grpc-web
	// then SubscribeTransactionStream is more appropriate.
	//
	// **Requires TxIndex to receive input metadata**
	SubscribeTransactions(*SubscribeTransactionsRequest, Bchrpc_SubscribeTransactionsServer) error
	// Subscribe to relevant transactions based on the subscription requests.
	// The parameters to filter transactions on can be updated by sending new
	// SubscribeTransactionsRequest objects on the stream.
	//
	// Because this RPC using bi-directional streaming it cannot be used with
	// grpc-web.
	//
	// **Requires TxIndex to receive input metadata**
	SubscribeTransactionStream(Bchrpc_SubscribeTransactionStreamServer) error
	// Subscribe to notifications of new blocks being connected to the blockchain
	// or blocks being disconnected.
	SubscribeBlocks(*SubscribeBlocksRequest, Bchrpc_SubscribeBlocksServer) error
}

func RegisterBchrpcServer(s *grpc.Server, srv BchrpcServer) {
	s.RegisterService(&_Bchrpc_serviceDesc, srv)
}

func _Bchrpc_GetMempoolInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMempoolInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetMempoolInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetMempoolInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetMempoolInfo(ctx, req.(*GetMempoolInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetBlockchainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockchainInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetBlockchainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetBlockchainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetBlockchainInfo(ctx, req.(*GetBlockchainInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetBlockInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetBlockInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetBlockInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetBlockInfo(ctx, req.(*GetBlockInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetRawBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRawBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetRawBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetRawBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetRawBlock(ctx, req.(*GetRawBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetBlockFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetBlockFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetBlockFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetBlockFilter(ctx, req.(*GetBlockFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetHeaders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHeadersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetHeaders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetHeaders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetHeaders(ctx, req.(*GetHeadersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetRawTransaction(ctx, req.(*GetRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetAddressTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetAddressTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetAddressTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetAddressTransactions(ctx, req.(*GetAddressTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetRawAddressTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRawAddressTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetRawAddressTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetRawAddressTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetRawAddressTransactions(ctx, req.(*GetRawAddressTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetAddressUnspentOutputs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressUnspentOutputsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetAddressUnspentOutputs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetAddressUnspentOutputs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetAddressUnspentOutputs(ctx, req.(*GetAddressUnspentOutputsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_GetMerkleProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerkleProofRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).GetMerkleProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/GetMerkleProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).GetMerkleProof(ctx, req.(*GetMerkleProofRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BchrpcServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bchrpc/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BchrpcServer).SubmitTransaction(ctx, req.(*SubmitTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bchrpc_SubscribeTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeTransactionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BchrpcServer).SubscribeTransactions(m, &bchrpcSubscribeTransactionsServer{stream})
}

type Bchrpc_SubscribeTransactionsServer interface {
	Send(*TransactionNotification) error
	grpc.ServerStream
}

type bchrpcSubscribeTransactionsServer struct {
	grpc.ServerStream
}

func (x *bchrpcSubscribeTransactionsServer) Send(m *TransactionNotification) error {
	return x.ServerStream.SendMsg(m)
}

func _Bchrpc_SubscribeTransactionStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BchrpcServer).SubscribeTransactionStream(&bchrpcSubscribeTransactionStreamServer{stream})
}

type Bchrpc_SubscribeTransactionStreamServer interface {
	Send(*TransactionNotification) error
	Recv() (*SubscribeTransactionsRequest, error)
	grpc.ServerStream
}

type bchrpcSubscribeTransactionStreamServer struct {
	grpc.ServerStream
}

func (x *bchrpcSubscribeTransactionStreamServer) Send(m *TransactionNotification) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bchrpcSubscribeTransactionStreamServer) Recv() (*SubscribeTransactionsRequest, error) {
	m := new(SubscribeTransactionsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Bchrpc_SubscribeBlocks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeBlocksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BchrpcServer).SubscribeBlocks(m, &bchrpcSubscribeBlocksServer{stream})
}

type Bchrpc_SubscribeBlocksServer interface {
	Send(*BlockNotification) error
	grpc.ServerStream
}

type bchrpcSubscribeBlocksServer struct {
	grpc.ServerStream
}

func (x *bchrpcSubscribeBlocksServer) Send(m *BlockNotification) error {
	return x.ServerStream.SendMsg(m)
}

var _Bchrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.bchrpc",
	HandlerType: (*BchrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMempoolInfo",
			Handler:    _Bchrpc_GetMempoolInfo_Handler,
		},
		{
			MethodName: "GetBlockchainInfo",
			Handler:    _Bchrpc_GetBlockchainInfo_Handler,
		},
		{
			MethodName: "GetBlockInfo",
			Handler:    _Bchrpc_GetBlockInfo_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _Bchrpc_GetBlock_Handler,
		},
		{
			MethodName: "GetRawBlock",
			Handler:    _Bchrpc_GetRawBlock_Handler,
		},
		{
			MethodName: "GetBlockFilter",
			Handler:    _Bchrpc_GetBlockFilter_Handler,
		},
		{
			MethodName: "GetHeaders",
			Handler:    _Bchrpc_GetHeaders_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _Bchrpc_GetTransaction_Handler,
		},
		{
			MethodName: "GetRawTransaction",
			Handler:    _Bchrpc_GetRawTransaction_Handler,
		},
		{
			MethodName: "GetAddressTransactions",
			Handler:    _Bchrpc_GetAddressTransactions_Handler,
		},
		{
			MethodName: "GetRawAddressTransactions",
			Handler:    _Bchrpc_GetRawAddressTransactions_Handler,
		},
		{
			MethodName: "GetAddressUnspentOutputs",
			Handler:    _Bchrpc_GetAddressUnspentOutputs_Handler,
		},
		{
			MethodName: "GetMerkleProof",
			Handler:    _Bchrpc_GetMerkleProof_Handler,
		},
		{
			MethodName: "SubmitTransaction",
			Handler:    _Bchrpc_SubmitTransaction_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeTransactions",
			Handler:       _Bchrpc_SubscribeTransactions_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeTransactionStream",
			Handler:       _Bchrpc_SubscribeTransactionStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SubscribeBlocks",
			Handler:       _Bchrpc_SubscribeBlocks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bchrpc.proto",
}

func init() { proto.RegisterFile("bchrpc.proto", fileDescriptor_9425015282cfe529) }

var fileDescriptor_9425015282cfe529 = []byte{
	// 2191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcd, 0x6f, 0x23, 0x49,
	0x15, 0x77, 0x3b, 0x8e, 0x3f, 0x9e, 0xdb, 0xb1, 0x53, 0x93, 0x0f, 0x8f, 0x77, 0x3e, 0x9c, 0x9e,
	0xd9, 0x99, 0xa0, 0x88, 0x6c, 0x98, 0x2c, 0x5a, 0x2d, 0xec, 0x48, 0xbb, 0xc9, 0x24, 0xb1, 0xb5,
	0x4c, 0x66, 0xb6, 0x92, 0x05, 0xc1, 0xc5, 0xea, 0xb6, 0xcb, 0x49, 0x13, 0xbb, 0xdb, 0x74, 0x95,
	0x67, 0x13, 0x4e, 0x48, 0xfc, 0x05, 0x1c, 0xf8, 0x03, 0xb8, 0x23, 0xed, 0x1f, 0xc0, 0x81, 0x23,
	0x12, 0x17, 0xfe, 0x04, 0x0e, 0x48, 0x9c, 0x38, 0x70, 0xe2, 0x8c, 0xea, 0xa3, 0xbb, 0xab, 0xdd,
	0xdd, 0x09, 0xec, 0x72, 0xe1, 0xe6, 0x7a, 0xef, 0xd5, 0xab, 0x5f, 0xbd, 0xaf, 0xae, 0xf7, 0x0c,
	0xa6, 0x33, 0xbc, 0x0c, 0x66, 0xc3, 0xdd, 0x59, 0xe0, 0x33, 0x1f, 0x15, 0x67, 0x8e, 0xb5, 0x09,
	0xeb, 0x27, 0x84, 0xbd, 0x26, 0xd3, 0x99, 0xef, 0x4f, 0xfa, 0xde, 0xd8, 0xc7, 0xe4, 0x17, 0x73,
	0x42, 0x99, 0x75, 0x00, 0x1b, 0x8b, 0x0c, 0x3a, 0xf3, 0x3d, 0x4a, 0x10, 0x82, 0x12, 0x75, 0x7f,
	0x49, 0xda, 0x46, 0xd7, 0xd8, 0x6e, 0x60, 0xf1, 0x1b, 0xad, 0xc1, 0xb2, 0x73, 0xc3, 0x08, 0x6d,
	0x17, 0x05, 0x51, 0x2e, 0xac, 0x0e, 0xb4, 0x4f, 0x08, 0x3b, 0x98, 0xf8, 0xc3, 0xab, 0xe1, 0xa5,
	0xed, 0x7a, 0xba, 0xfe, 0x7f, 0x14, 0xe1, 0x7e, 0x06, 0x53, 0x9d, 0xd1, 0x87, 0xba, 0xe3, 0xb2,
	0xa1, 0xef, 0x7a, 0x03, 0x8f, 0x30, 0x71, 0xd4, 0xca, 0x8b, 0xed, 0xdd, 0x99, 0xb3, 0x9b, 0xbb,
	0x67, 0xf7, 0x40, 0x6e, 0x38, 0x25, 0x0c, 0x83, 0x13, 0xfd, 0x46, 0x8f, 0xa1, 0xee, 0x10, 0xca,
	0x06, 0x97, 0xc4, 0xbd, 0xb8, 0x64, 0x02, 0xe0, 0x32, 0x06, 0x4e, 0xea, 0x09, 0x0a, 0x7a, 0x06,
	0x4d, 0x21, 0xe0, 0x70, 0xb5, 0x83, 0x4b, 0x9b, 0x5e, 0xb6, 0x97, 0xba, 0xc6, 0xb6, 0x89, 0x1b,
	0x9c, 0x2c, 0x0e, 0xeb, 0xd9, 0xf4, 0x12, 0x3d, 0x02, 0x18, 0xb9, 0xe3, 0xb1, 0x3b, 0x9c, 0x4f,
	0xd8, 0x4d, 0xbb, 0xd4, 0x35, 0xb6, 0x0d, 0xac, 0x51, 0xf8, 0x41, 0x53, 0x32, 0x72, 0x6d, 0x6f,
	0xc0, 0xdc, 0x29, 0x69, 0x2f, 0x77, 0x8d, 0xed, 0x25, 0x0c, 0x92, 0x74, 0xee, 0x4e, 0x09, 0xba,
	0x0f, 0x55, 0x76, 0x3d, 0x70, 0xbd, 0x11, 0xb9, 0x6e, 0x97, 0xbb, 0xc6, 0x76, 0x15, 0x57, 0xd8,
	0x75, 0x9f, 0x2f, 0xd1, 0x43, 0x00, 0x7b, 0x34, 0x0a, 0x14, 0xb3, 0x22, 0x98, 0x35, 0x4e, 0x11,
	0x6c, 0xeb, 0x53, 0x80, 0xf8, 0x76, 0xa8, 0x0e, 0x95, 0xd7, 0x9f, 0xf5, 0x4f, 0x4f, 0x8f, 0xce,
	0x5b, 0x05, 0xbe, 0xc0, 0x47, 0x27, 0xe7, 0x47, 0x67, 0xe7, 0x2d, 0x03, 0x99, 0x50, 0xe5, 0xbf,
	0x4e, 0x8f, 0xce, 0xf7, 0x5b, 0x45, 0x04, 0x50, 0x3e, 0xeb, 0xbf, 0xe6, 0x62, 0x4b, 0xd6, 0x4f,
	0xe0, 0x5e, 0x68, 0x39, 0xcd, 0x0b, 0x68, 0x0d, 0x4a, 0xe2, 0xc2, 0xdc, 0xc0, 0x66, 0xaf, 0x80,
	0xc5, 0x0a, 0xb5, 0xa1, 0xac, 0x5b, 0xab, 0x57, 0xc0, 0x6a, 0x7d, 0xd0, 0x82, 0x15, 0x2e, 0x31,
	0xf0, 0x03, 0x65, 0x4f, 0xeb, 0x63, 0x58, 0x4b, 0x2a, 0x56, 0x1e, 0xdc, 0x82, 0x92, 0xeb, 0x8d,
	0x7d, 0xa1, 0xb9, 0xfe, 0xa2, 0xc1, 0x5d, 0x17, 0x0b, 0x09, 0x96, 0xf5, 0x2b, 0x03, 0x9a, 0xe1,
	0xde, 0x6f, 0x08, 0x08, 0xed, 0xc0, 0xea, 0x78, 0x3e, 0x99, 0x0c, 0x58, 0x60, 0x7b, 0xd4, 0x1e,
	0x32, 0xd7, 0xf7, 0xa8, 0x70, 0x5f, 0x15, 0xb7, 0x38, 0xe3, 0x5c, 0xa3, 0x67, 0xa0, 0xdf, 0x87,
	0x56, 0x8c, 0x40, 0x21, 0x7f, 0x0c, 0xcb, 0x22, 0x14, 0x14, 0xf4, 0x5a, 0x04, 0x1d, 0x4b, 0xba,
	0xf5, 0x63, 0x40, 0x27, 0x84, 0x61, 0xfb, 0xab, 0x6f, 0x83, 0x3c, 0x03, 0xcc, 0x8e, 0xf0, 0x51,
	0xac, 0x57, 0xe1, 0x59, 0xd3, 0xf1, 0x98, 0x21, 0x88, 0x9f, 0x8a, 0xc4, 0x15, 0x92, 0xc7, 0xee,
	0x84, 0x91, 0xe0, 0x7f, 0x87, 0x63, 0x4f, 0xa4, 0x7e, 0x42, 0xb5, 0x82, 0xb2, 0x01, 0xe5, 0xb1,
	0xa0, 0x28, 0x2c, 0x6a, 0x65, 0x39, 0xb0, 0x7a, 0x42, 0x58, 0x8f, 0xd8, 0x23, 0x12, 0xd0, 0x10,
	0xc8, 0x1e, 0xac, 0xc9, 0x94, 0x9a, 0xf8, 0x43, 0x9b, 0x71, 0xf5, 0x36, 0xbd, 0x24, 0xb4, 0x6d,
	0x74, 0x97, 0xb6, 0x4d, 0x8c, 0x04, 0xef, 0x47, 0x92, 0xd5, 0x13, 0x1c, 0xf4, 0x1e, 0xd4, 0x28,
	0xf3, 0x67, 0x32, 0x07, 0x8b, 0xe2, 0x84, 0x2a, 0x27, 0x70, 0xb6, 0xf5, 0x52, 0x58, 0x3d, 0x3a,
	0x43, 0x21, 0x7a, 0x0e, 0x95, 0x4b, 0x49, 0x12, 0x7a, 0x53, 0x91, 0x16, 0x72, 0xad, 0x1d, 0x61,
	0x2f, 0x2d, 0x1c, 0x42, 0x98, 0x48, 0xb7, 0x97, 0xb4, 0x96, 0xf5, 0xb9, 0xb0, 0x40, 0x42, 0x58,
	0x9d, 0xf7, 0x3d, 0xa8, 0x6b, 0xa1, 0xa6, 0x42, 0xa4, 0xc9, 0xcf, 0xd4, 0xa5, 0x75, 0x19, 0x6b,
	0x57, 0x54, 0x41, 0x6c, 0x7f, 0xf5, 0x1f, 0x1e, 0xfe, 0x52, 0x14, 0xc6, 0x45, 0x79, 0x75, 0x7e,
	0x37, 0x7d, 0xbe, 0x99, 0x3c, 0xee, 0xf7, 0x06, 0x3c, 0x3c, 0x21, 0xec, 0xb3, 0xd1, 0x28, 0x20,
	0x94, 0xea, 0xf1, 0x1f, 0x1e, 0xda, 0x86, 0x8a, 0x2d, 0xb9, 0x62, 0x7f, 0x0d, 0x87, 0x4b, 0xb4,
	0x09, 0x15, 0xcf, 0x19, 0xd0, 0x2b, 0x77, 0xa6, 0x0a, 0x79, 0xd9, 0x73, 0xce, 0xae, 0xdc, 0x19,
	0x2f, 0x5d, 0x9e, 0x33, 0x18, 0x13, 0x36, 0x94, 0xc5, 0xb1, 0x81, 0x2b, 0x9e, 0x73, 0xcc, 0x97,
	0x51, 0xbc, 0x95, 0x72, 0xe2, 0x6d, 0x79, 0x21, 0xde, 0x1a, 0x50, 0xa7, 0xcc, 0x0e, 0x54, 0xbd,
	0xb5, 0xfe, 0x60, 0xc0, 0xa3, 0x3c, 0xb8, 0xea, 0xce, 0xc7, 0xb0, 0x31, 0xf4, 0xbd, 0xb1, 0x1b,
	0x4c, 0xc9, 0x28, 0x99, 0xe8, 0xd2, 0xe5, 0x29, 0xf3, 0xaf, 0x47, 0xe2, 0xba, 0x3e, 0xf4, 0x05,
	0xb4, 0xe7, 0x5e, 0x8e, 0xa6, 0xa2, 0xd0, 0xb4, 0xc1, 0x35, 0xa9, 0x6f, 0x9e, 0xae, 0x70, 0x53,
	0xdb, 0xa7, 0xab, 0xb4, 0xbe, 0x36, 0xa0, 0x2b, 0x9d, 0xf5, 0xff, 0x62, 0xef, 0xdf, 0x1a, 0xb0,
	0x75, 0x0b, 0x62, 0x65, 0xf2, 0xef, 0xdf, 0x6a, 0x72, 0x33, 0xcf, 0xc2, 0x1f, 0xdf, 0x61, 0x61,
	0x33, 0xdf, 0x92, 0x3f, 0x84, 0xc7, 0x71, 0x18, 0x7c, 0xe9, 0xd1, 0x19, 0xf1, 0xd8, 0x9b, 0x39,
	0x9b, 0xcd, 0xd9, 0xdd, 0x76, 0xb4, 0xde, 0x08, 0x2f, 0xe4, 0x6c, 0x56, 0x57, 0xda, 0x81, 0x8a,
	0x2f, 0x49, 0x2a, 0x6c, 0x56, 0xb9, 0xb3, 0x13, 0xc2, 0x38, 0x94, 0xb0, 0x0e, 0xd4, 0xb3, 0x28,
	0xb8, 0x9a, 0x90, 0xb7, 0x81, 0xef, 0x8f, 0x43, 0x0c, 0xdf, 0x81, 0x96, 0x76, 0xab, 0x81, 0x96,
	0xbc, 0x4d, 0x8d, 0x2e, 0x0a, 0xd6, 0x95, 0x7a, 0x41, 0x69, 0x3a, 0x14, 0x94, 0x27, 0xc9, 0x2f,
	0xcc, 0x42, 0xc9, 0x92, 0x3c, 0x5e, 0x6b, 0x55, 0xc1, 0x94, 0x96, 0x53, 0x2b, 0xfe, 0x39, 0x18,
	0x4f, 0xec, 0x0b, 0xaa, 0x1e, 0x29, 0x72, 0x61, 0x7d, 0x02, 0xed, 0xb3, 0xb9, 0x33, 0x75, 0xb3,
	0x2a, 0xdc, 0xdd, 0x35, 0xe3, 0x03, 0xb8, 0x9f, 0xb1, 0x3b, 0x7e, 0xef, 0xa5, 0x6a, 0xd4, 0x5f,
	0x0d, 0x78, 0x70, 0x36, 0x77, 0xe8, 0x30, 0x70, 0x1d, 0x92, 0x15, 0xf3, 0xfb, 0x50, 0xa3, 0x21,
	0x5f, 0x5d, 0x73, 0x7d, 0x21, 0x4d, 0xd5, 0xb7, 0x25, 0x96, 0x43, 0x1f, 0x41, 0x7d, 0xee, 0xc5,
	0xdb, 0x8a, 0xb7, 0x6d, 0xd3, 0x25, 0xd1, 0x73, 0x68, 0xba, 0xde, 0x70, 0x32, 0x1f, 0x91, 0xc1,
	0x54, 0x66, 0xaf, 0x7a, 0x03, 0xac, 0x28, 0xb2, 0xca, 0x69, 0xb4, 0x0d, 0xad, 0x50, 0xd0, 0xf5,
	0x64, 0x46, 0x88, 0x44, 0x8a, 0x25, 0xfb, 0x9e, 0xf0, 0x84, 0xd5, 0x86, 0x8d, 0xe8, 0x82, 0x82,
	0x12, 0x5e, 0xcd, 0xfa, 0x8d, 0x01, 0xab, 0x82, 0x72, 0xea, 0x33, 0x77, 0xec, 0x0e, 0x6d, 0x8e,
	0x0a, 0xed, 0x42, 0x89, 0xdd, 0xcc, 0x88, 0x7a, 0xaa, 0x76, 0x22, 0x97, 0xea, 0x42, 0xbb, 0xe7,
	0x37, 0x33, 0x82, 0x85, 0x5c, 0x1c, 0x03, 0xc5, 0xfc, 0x18, 0xb0, 0x9e, 0x43, 0x89, 0x6f, 0x41,
	0x0d, 0xa8, 0x1d, 0xbe, 0x39, 0x3d, 0x3d, 0x3a, 0x3c, 0x3f, 0x7a, 0xd5, 0x2a, 0xa0, 0x16, 0x98,
	0xaf, 0xfa, 0x67, 0x31, 0xc5, 0xb0, 0x7e, 0x57, 0x84, 0x4d, 0xcd, 0x46, 0x09, 0x64, 0x1f, 0x26,
	0x90, 0x75, 0x17, 0xcc, 0x99, 0x87, 0xef, 0x18, 0xd6, 0x33, 0x13, 0x59, 0xe1, 0x5d, 0xac, 0xb9,
	0xbd, 0x02, 0x5e, 0xcb, 0x4a, 0x6c, 0xf4, 0x05, 0x6c, 0xe6, 0x94, 0x04, 0xe1, 0xa2, 0xdc, 0x9a,
	0xdb, 0x2b, 0xe0, 0x8d, 0xec, 0x5a, 0x61, 0x3d, 0x53, 0x56, 0x69, 0x42, 0xfd, 0xcb, 0xd3, 0xc3,
	0x37, 0xa7, 0xc7, 0x7d, 0xfc, 0x5a, 0xd8, 0x45, 0x9a, 0x49, 0x2d, 0x0d, 0x5e, 0xf9, 0xf4, 0x20,
	0xff, 0x5b, 0x11, 0x6a, 0x91, 0x85, 0xb3, 0xa2, 0x5a, 0xa4, 0x9c, 0xde, 0x25, 0x84, 0x8f, 0xcc,
	0x36, 0x54, 0xde, 0x91, 0x80, 0x86, 0x98, 0x97, 0x71, 0xb8, 0x44, 0xef, 0xc3, 0xca, 0x2c, 0x20,
	0xef, 0x5c, 0x7f, 0x4e, 0xb5, 0x68, 0x32, 0x71, 0x23, 0xa4, 0x8a, 0x03, 0x65, 0x6b, 0xc0, 0xeb,
	0xc0, 0x20, 0xf0, 0x7d, 0x59, 0xa2, 0x4d, 0xde, 0x1a, 0x70, 0x12, 0xf6, 0x7d, 0x86, 0x1e, 0x40,
	0x8d, 0x37, 0x0d, 0x94, 0xd9, 0xd3, 0x99, 0xe8, 0x0d, 0x96, 0x70, 0x4c, 0xe0, 0x58, 0x1d, 0x97,
	0x51, 0xd1, 0x17, 0x34, 0xb0, 0xf8, 0xcd, 0xcb, 0x80, 0xe7, 0x7b, 0x43, 0xd2, 0xae, 0xca, 0x8e,
	0x4b, 0x2c, 0xd0, 0x53, 0x68, 0x28, 0x93, 0xd9, 0xb2, 0xea, 0xd6, 0x04, 0xde, 0x24, 0x71, 0xa1,
	0x93, 0x81, 0x54, 0x27, 0xf3, 0x0c, 0x9a, 0x1e, 0xb9, 0x4e, 0x74, 0x44, 0x75, 0x79, 0x2d, 0x4e,
	0x8e, 0x3b, 0xa2, 0xb0, 0x13, 0x34, 0xc5, 0x21, 0xe2, 0xb7, 0xf5, 0x2f, 0x03, 0x96, 0xe5, 0xa5,
	0xef, 0xee, 0x00, 0xd0, 0xab, 0x64, 0x35, 0x1d, 0xd9, 0xcc, 0x56, 0x5f, 0xe2, 0xfb, 0x91, 0xb8,
	0x1e, 0x65, 0xaf, 0x6c, 0x66, 0x27, 0x0a, 0x2d, 0x27, 0x74, 0x7e, 0x6d, 0x40, 0x73, 0x41, 0x08,
	0xed, 0xe4, 0xd5, 0xe9, 0x5e, 0x21, 0x55, 0xa9, 0xd1, 0x7e, 0xb2, 0x40, 0xe6, 0x46, 0xb8, 0x2e,
	0x75, 0xb0, 0x02, 0x26, 0xbb, 0x76, 0x47, 0x94, 0x3f, 0x9c, 0xd9, 0x35, 0xb5, 0xfe, 0x52, 0x86,
	0xba, 0x1e, 0xf8, 0x59, 0x01, 0xa6, 0x05, 0x52, 0x31, 0x19, 0x48, 0xdf, 0x85, 0xb2, 0xeb, 0x89,
	0x8f, 0xd3, 0x92, 0xb8, 0xff, 0x62, 0xd5, 0xdb, 0xed, 0x73, 0x2e, 0x56, 0x42, 0x68, 0x2f, 0xfe,
	0x98, 0x95, 0xe2, 0x97, 0x8b, 0x2e, 0xbf, 0xf0, 0x45, 0xe3, 0x6f, 0x6b, 0xe1, 0xcd, 0xa8, 0x37,
	0x6d, 0xe0, 0x2a, 0x27, 0x88, 0xce, 0x34, 0x74, 0x64, 0x35, 0x76, 0x64, 0x32, 0x24, 0x6b, 0x8b,
	0x21, 0x99, 0x0a, 0x34, 0xc8, 0x0a, 0xb4, 0x2d, 0x30, 0x55, 0x0c, 0xc9, 0xb4, 0xaa, 0x0b, 0xa1,
	0xba, 0xa0, 0xa9, 0xee, 0xfb, 0x21, 0x80, 0x16, 0x66, 0xa6, 0x30, 0x56, 0xcd, 0x09, 0x43, 0xac,
	0xf3, 0x75, 0x11, 0x96, 0xc5, 0xd5, 0x79, 0xc0, 0xcb, 0xee, 0x58, 0xce, 0x1d, 0xe4, 0x02, 0xfd,
	0x00, 0xaa, 0xfc, 0x86, 0xbe, 0xeb, 0x31, 0xe5, 0xb7, 0x47, 0x99, 0x96, 0x13, 0xf6, 0xe0, 0x52,
	0x38, 0x92, 0xe7, 0xdf, 0x72, 0xea, 0x5e, 0x78, 0x36, 0x9b, 0x07, 0x64, 0xc0, 0x2b, 0xfd, 0x8c,
	0xa9, 0x8f, 0x6a, 0x33, 0xa2, 0x9f, 0x09, 0x32, 0xea, 0x40, 0x95, 0xf2, 0xf2, 0xcf, 0x13, 0xae,
	0x24, 0x8d, 0x17, 0xae, 0x39, 0xb0, 0x77, 0xf6, 0x64, 0x1e, 0x76, 0xfc, 0x72, 0xc1, 0x3f, 0x49,
	0x51, 0x65, 0x50, 0xba, 0xcb, 0x42, 0x77, 0x54, 0x30, 0x94, 0x6a, 0xed, 0x55, 0x53, 0x49, 0xbc,
	0x6a, 0x3a, 0x1f, 0x42, 0x35, 0x44, 0x9d, 0x19, 0x4d, 0x91, 0x45, 0x8a, 0x9a, 0x45, 0x3a, 0x7f,
	0x32, 0xa0, 0x2c, 0x9d, 0x9f, 0x63, 0xb2, 0x08, 0x6f, 0x51, 0xc7, 0xfb, 0x04, 0x1a, 0xb3, 0xb9,
	0x73, 0x45, 0x6e, 0x92, 0x96, 0x30, 0x25, 0x31, 0x8d, 0xb5, 0x94, 0x7c, 0xc9, 0x6e, 0x81, 0x29,
	0xf7, 0x0d, 0x86, 0x13, 0x9b, 0x52, 0x61, 0x8b, 0x1a, 0xae, 0x4b, 0xda, 0x21, 0x27, 0xa1, 0x0f,
	0xe0, 0xde, 0xc8, 0xa5, 0x36, 0xa5, 0x64, 0xea, 0x4c, 0xc8, 0x48, 0xb7, 0x4a, 0x0d, 0x23, 0x9d,
	0x25, 0x4f, 0xb3, 0xfe, 0x6e, 0x00, 0x4a, 0x7f, 0x18, 0xbe, 0x41, 0x0b, 0xa6, 0xc6, 0x2b, 0xfc,
	0xf3, 0xc3, 0xa3, 0x5f, 0xde, 0xbb, 0x26, 0x28, 0x22, 0xfc, 0xb7, 0xc0, 0x94, 0x6c, 0x15, 0xa6,
	0xb2, 0xc8, 0xd7, 0x05, 0x4d, 0x85, 0x69, 0x0b, 0x96, 0xc6, 0x44, 0xfa, 0x7e, 0x09, 0xf3, 0x9f,
	0xe8, 0x01, 0xc0, 0x98, 0x90, 0xc1, 0x8c, 0x04, 0x83, 0x2b, 0x47, 0xf9, 0xbe, 0x3a, 0x26, 0xe4,
	0x2d, 0x09, 0x3e, 0x77, 0xd0, 0x0e, 0xac, 0x8a, 0x57, 0xb7, 0xeb, 0x5d, 0x0c, 0x66, 0x81, 0xeb,
	0x07, 0x2e, 0xbb, 0x11, 0x57, 0x35, 0x70, 0x2b, 0x64, 0xbc, 0x55, 0x74, 0xeb, 0xcf, 0x06, 0x34,
	0x12, 0x0f, 0xd1, 0x44, 0x58, 0x1b, 0xff, 0x65, 0x58, 0xa7, 0x3c, 0x59, 0xcc, 0xf0, 0x64, 0x14,
	0x04, 0x4b, 0x7a, 0x10, 0x3c, 0x86, 0xba, 0x4b, 0x07, 0x43, 0xdf, 0xf5, 0x1c, 0x9b, 0x12, 0xf5,
	0x32, 0x02, 0x97, 0x1e, 0x2a, 0x4a, 0x2a, 0xa1, 0x97, 0x53, 0x09, 0x6d, 0xfd, 0xd1, 0x80, 0xd5,
	0xd4, 0x73, 0x8d, 0x57, 0x13, 0x15, 0x2a, 0x6a, 0x02, 0x50, 0xc3, 0x31, 0x01, 0x7d, 0x02, 0xb5,
	0x10, 0x7e, 0xd8, 0x8a, 0xdd, 0x75, 0xdf, 0x78, 0x03, 0xbf, 0x30, 0xff, 0x72, 0x0c, 0xc8, 0x84,
	0x4c, 0x89, 0xa7, 0x4a, 0xa8, 0x89, 0x4d, 0x4e, 0x3c, 0x52, 0x34, 0x9e, 0xec, 0xf6, 0xe2, 0x9c,
	0x48, 0xde, 0xaf, 0x69, 0x27, 0xc7, 0x44, 0x2f, 0xfe, 0x09, 0x50, 0x96, 0x83, 0x52, 0xd4, 0x87,
	0x95, 0xe4, 0x14, 0x14, 0xdd, 0x57, 0x43, 0xc8, 0xf4, 0xc8, 0xb4, 0xd3, 0xc9, 0x62, 0xc9, 0x47,
	0xb4, 0x55, 0x40, 0x58, 0xcc, 0x48, 0x92, 0xb3, 0x4b, 0xf4, 0x20, 0x67, 0xa4, 0x29, 0x15, 0x3e,
	0xbc, 0x75, 0xe0, 0x69, 0x15, 0xd0, 0x21, 0x98, 0xfa, 0xf0, 0x0d, 0x6d, 0xea, 0x1b, 0x74, 0x4d,
	0xed, 0x34, 0x23, 0x52, 0xf2, 0x11, 0x54, 0x43, 0x0e, 0xba, 0xa7, 0xcb, 0x85, 0x9b, 0xd7, 0x92,
	0xc4, 0x68, 0xe3, 0xa7, 0x50, 0xd7, 0xe6, 0x55, 0x68, 0x43, 0x89, 0x2d, 0x0c, 0xc6, 0x3a, 0x9b,
	0x29, 0x7a, 0xa4, 0x41, 0x9a, 0x57, 0x9b, 0x34, 0x45, 0xe6, 0x4d, 0x0f, 0xb6, 0x22, 0xf3, 0x66,
	0x0c, 0xa6, 0xac, 0x02, 0x7a, 0x09, 0x10, 0x8f, 0x87, 0xd0, 0xba, 0x92, 0x4d, 0x8e, 0xa4, 0x3a,
	0x1b, 0x8b, 0xe4, 0x05, 0x24, 0x7a, 0x99, 0x09, 0x91, 0xa4, 0x1b, 0xaa, 0x08, 0x49, 0x46, 0xb7,
	0x14, 0x39, 0x3a, 0x39, 0xbf, 0x89, 0x1c, 0x9d, 0x39, 0x06, 0x8a, 0x1c, 0x9d, 0x3d, 0xf4, 0xb1,
	0x0a, 0xc8, 0x16, 0xbd, 0x64, 0x46, 0xc7, 0x8e, 0xb6, 0xd4, 0xd6, 0xfc, 0xf9, 0x43, 0xc7, 0xba,
	0x4d, 0x24, 0x3a, 0xe2, 0xe7, 0xe1, 0xd8, 0x29, 0xeb, 0x94, 0xa7, 0x31, 0xc0, 0x5b, 0x0e, 0x7a,
	0xff, 0x0e, 0xa9, 0xe8, 0xac, 0x0b, 0x31, 0x12, 0xcb, 0xec, 0xd7, 0xd1, 0x93, 0x24, 0xda, 0xcc,
	0x51, 0x40, 0xe7, 0xe9, 0xed, 0x42, 0x0b, 0x6e, 0xd5, 0x7a, 0x70, 0x2d, 0x7f, 0x17, 0x7b, 0x7b,
	0x2d, 0x7f, 0x53, 0x2d, 0xbb, 0x74, 0x6b, 0xaa, 0x47, 0x96, 0x6e, 0xcd, 0x6b, 0xbc, 0xa5, 0x5b,
	0x73, 0x1b, 0x6b, 0xab, 0x80, 0x7e, 0x06, 0xeb, 0x99, 0x5d, 0x34, 0xea, 0xaa, 0x9d, 0xb9, 0x0d,
	0x76, 0xe7, 0xbd, 0x5b, 0xfa, 0x38, 0xab, 0xb0, 0x67, 0x20, 0x1b, 0x3a, 0x59, 0x0a, 0xce, 0x58,
	0x40, 0xec, 0xe9, 0xb7, 0x3e, 0x60, 0xdb, 0xd8, 0x33, 0x50, 0x0f, 0x9a, 0x0b, 0x3d, 0x32, 0xea,
	0x24, 0xf4, 0x26, 0x1a, 0xe7, 0xce, 0x7a, 0x66, 0x53, 0xcc, 0xc1, 0x3a, 0x65, 0xf1, 0x8f, 0xd4,
	0xfe, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x43, 0x0a, 0x14, 0xa1, 0x1a, 0x00, 0x00,
}
